{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./pages/_app.js","webpack:///external \"redux-saga\"","webpack:///external \"shortid\"","webpack:///./reducers/index.js","webpack:///./sagas/post.js","webpack:///./sagas/user.js","webpack:///./sagas/index.js","webpack:///./store/configureStore.js","webpack:///external \"next-redux-wrapper\"","webpack:///./reducers/user.js","webpack:///external \"redux-saga/effects\"","webpack:///external \"immer\"","webpack:///external \"@redux-saga/core/effects\"","webpack:///external \"react\"","webpack:///./reducers/post.js","webpack:///external \"next-redux-saga\"","webpack:///external \"redux\"","webpack:///external \"prop-types\"","webpack:///external \"redux-devtools-extension\"","webpack:///external \"next/head\"","webpack:///external \"axios\""],"names":["NodeBird","Component","propType","PropType","elementType","isRequired","wrapper","withRedux","withReduxSaga","rootReducer","state","action","type","HYDRATE","console","log","payload","combineReducer","combineReducers","user","post","retweetAPI","data","axios","retweet","result","call","put","RETWEET_SUCCESS","err","error","RETWEET_FAILURE","response","uploadImagesAPI","uploadImages","UPLOAD_IMAGES_SUCCESS","UPLOAD_IMAGES_FAILURE","addPostAPI","addPost","ADD_POST_SUCCESS","ADD_POST_TO_ME","id","ADD_POST_FAILURE","likePostAPI","patch","likePost","LIKE_POST_SUCCESS","LIKE_POST_FAILURE","unlikePostAPI","delete","unlikePost","UNLIKE_POST_SUCCESS","UNLIKE_POST_FAILURE","loadPostsAPI","lastId","get","loadPosts","LOAD_POSTS_SUCCESS","LOAD_POSTS_FAILURE","loadHashtagPostsAPI","encodeURIComponent","loadHashtagPosts","LOAD_HASHTAG_POSTS_SUCCESS","LOAD_HASHTAG_POSTS_FAILURE","loadUserPostsAPI","loadUserPosts","LOAD_USER_POSTS_SUCCESS","LOAD_USER_POSTS_FAILURE","loadPostAPI","loadPost","LOAD_POST_SUCCESS","LOAD_POST_FAILURE","removePostAPI","removePost","REMOVE_POST_SUCCESS","REMOVE_POST_OF_ME","REMOVE_POST_FAILURE","addCommentAPI","postId","addComment","ADD_COMMENT_SUCCESS","ADD_COMMENT_FAILURE","watchRetweet","takeLatest","RETWEET_REQUEST","watchUploadImages","UPLOAD_IMAGES_REQUEST","watchLikePost","LIKE_POST_REQUEST","watchUnlikePost","UNLIKE_POST_REQUEST","watchAddPost","ADD_POST_REQUEST","watchLoadHashtagPosts","throttle","LOAD_HASHTAG_POSTS_REQUEST","watchLoadUserPosts","LOAD_USER_POSTS_REQUEST","watchLoadPosts","LOAD_POSTS_REQUEST","watchLoadPost","LOAD_POST_REQUEST","watchRemovePost","REMOVE_POST_REQUEST","watchAddComment","ADD_COMMENT_REQUEST","postSaga","all","fork","removeFollowerAPI","removeFollower","REMOVE_FOLLOWER_SUCCESS","REMOVE_FOLLOWER_FAILURE","loadFollowersAPI","loadFollowers","LOAD_FOLLOWERS_SUCCESS","LOAD_FOLLOWERS_FAILURE","loadFollowingsAPI","loadFollowings","LOAD_FOLLOWINGS_SUCCESS","LOAD_FOLLOWINGS_FAILURE","changeNicknameAPI","nickname","changeNickname","CHANGE_NICKNAME_SUCCESS","CHANGE_NICKNAME_FAILURE","loadMyInfoAPI","loadMyInfo","LOAD_MY_INFO_SUCCESS","LOAD_MY_INFO_FAILURE","loadUserAPI","loadUser","LOAD_USER_SUCCESS","LOAD_USER_FAILURE","followAPI","follow","FOLLOW_SUCCESS","FOLLOW_FAILURE","unfollowAPI","unfollow","UNFOLLOW_SUCCESS","UNFOLLOW_FAILURE","loginAPI","logIn","LOG_IN_SUCCESS","LOG_IN_FAILURE","logoutAPI","logOut","LOG_OUT_SUCCESS","LOG_OUT_FAILURE","signUpAPI","signUp","SIGN_UP_SUCCESS","SIGN_UP_FAILURE","watchRemoveFollower","REMOVE_FOLLOWER_REQUEST","watchLoadFollowing","LOAD_FOLLOWINGS_REQUEST","watchLoadFollowers","LOAD_FOLLOWERS_REQUEST","watchChangeNickname","CHANGE_NICKNAME_REQUEST","watchLoadMyInfo","LOAD_MY_INFO_REQUEST","watchLoadUser","LOAD_USER_REQUEST","watchFollow","FOLLOW_REQUEST","watchUnfollow","UNFOLLOW_REQUEST","watchLogin","LOG_IN_REQUEST","watchLogOut","LOG_OUT_REQUEST","watchSignUp","SIGN_UP_REQUEST","userSaga","defaults","baseURL","withCredentials","rootSaga","loggerMiddleware","dispatch","getState","next","configureStore","sagaMiddleware","createSagaMiddleware","middlewares","enhancer","compose","applyMiddleware","composeWithDevTools","store","createStore","reducer","sagaTask","run","createWrapper","debug","initialState","loadMyInfoLoading","loadMyInfoDone","loadMyInfoError","loadUserLoading","loadUserDone","loadUserError","followLoading","followDone","followError","unfollowLoading","unfollowDone","unfollowError","logInLoading","logInDone","logInError","logOutLoading","logOutDone","logOutError","signUpLoading","signUpDone","signUpError","changeNicknameLoading","changeNicknameDone","changeNicknameError","loadFollowingsLoading","loadFollowingsDone","loadFollowingsError","loadFollowersLoading","loadFollowersDone","loadFollowersError","removeFollowerLoading","removeFollowerDone","removeFollowerError","me","signUpData","loginData","loginRequestAction","logoutRequestAction","produce","draft","Followers","filter","v","UserId","removeFollowerloading","Followings","loadFollowingsloading","loadFollowersloading","loadMyInfoloading","userInfo","loadUserloading","push","followloading","Posts","unshift","mainPosts","imagePaths","singlePost","hasMorePost","loadPostsLoading","loadPostsDone","loadPostsError","loadPostLoading","loadPostDone","loadPostError","likePostLoading","likePostDone","likePostError","unlikePostLoading","unlikePostDone","unlikePostError","addPostLoading","addPostDone","addPostError","removePostLoading","removePostDone","removePostError","addCommentLoading","addCommentDone","addCommentError","uploadImagesLoading","uploadImagesDone","uploadImagesError","retweetLoading","retweetDone","retweetError","REMOVE_IMAGE","actino","i","find","PostId","Likers","concat","length","Comments"],"mappings":"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","file":"pages/_app.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = require('../ssr-module-cache.js');\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tvar threw = true;\n \t\ttry {\n \t\t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n \t\t\tthrew = false;\n \t\t} finally {\n \t\t\tif(threw) delete installedModules[moduleId];\n \t\t}\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","import React from 'react';\r\nimport PropType from 'prop-types';\r\nimport Head from 'next/head';\r\nimport 'antd/dist/antd.css'\r\nimport withReduxSaga from 'next-redux-saga';\r\n\r\nimport wrapper from '../store/configureStore';\r\n\r\nconst NodeBird = ({ Component }) => {\r\n    return (\r\n        <div>\r\n            <Head>\r\n                <meta charSet=\"utf-8\" />\r\n                <title>NodeBird</title>\r\n            </Head>\r\n            <Component />\r\n        </div>\r\n    )\r\n};\r\n\r\nNodeBird.propType = {\r\n    Component: PropType.elementType.isRequired,\r\n}\r\n\r\nexport default wrapper.withRedux(withReduxSaga(NodeBird));","module.exports = require(\"redux-saga\");","module.exports = require(\"shortid\");","import { HYDRATE } from 'next-redux-wrapper';\r\nimport { combineReducers } from 'redux';\r\n\r\nimport user from './user';\r\nimport post from './post';\r\n\r\n\r\nconst rootReducer = (state, action) =>  {\r\n    //reducer를 ssr하기위해 HYDRATE를 사용해야하는데 HYDRATE를 위해서 index를 추가 한 것이다.\r\n    switch (action.type) {\r\n        case HYDRATE:\r\n            console.log('HYDRATE', action);\r\n            return action.payload;\r\n        default: {\r\n            const combineReducer = combineReducers({\r\n                user,\r\n                post,\r\n            });\r\n            return combineReducer(state, action);\r\n        }\r\n    }\r\n};\r\n\r\nexport default rootReducer;","import axios from 'axios';\r\nimport { all, takeLatest, delay, fork, put, throttle, call } from \"@redux-saga/core/effects\";\r\nimport shortId from 'shortid';\r\nimport {\r\n    ADD_COMMENT_FAILURE,\r\n    ADD_COMMENT_REQUEST,\r\n    ADD_COMMENT_SUCCESS,\r\n    ADD_POST_FAILURE,\r\n    ADD_POST_REQUEST,\r\n    ADD_POST_SUCCESS,\r\n    generateDummyPost,\r\n    LOAD_POSTS_REQUEST,\r\n    LOAD_POSTS_SUCCESS,\r\n    LOAD_POSTS_FAILURE,\r\n    LOAD_HASHTAG_POSTS_REQUEST,\r\n    LOAD_HASHTAG_POSTS_SUCCESS,\r\n    LOAD_HASHTAG_POSTS_FAILURE,\r\n    LOAD_USER_POSTS_REQUEST,\r\n    LOAD_USER_POSTS_SUCCESS,\r\n    LOAD_USER_POSTS_FAILURE,\r\n    LOAD_POST_FAILURE,\r\n    LOAD_POST_REQUEST,\r\n    LOAD_POST_SUCCESS,\r\n    LIKE_POST_FAILURE,\r\n    LIKE_POST_REQUEST,\r\n    LIKE_POST_SUCCESS,\r\n    UNLIKE_POST_FAILURE,\r\n    UNLIKE_POST_REQUEST,\r\n    UNLIKE_POST_SUCCESS,\r\n    REMOVE_POST_FAILURE,\r\n    REMOVE_POST_REQUEST,\r\n    REMOVE_POST_SUCCESS,\r\n    UPLOAD_IMAGES_REQUEST,\r\n    UPLOAD_IMAGES_SUCCESS,\r\n    UPLOAD_IMAGES_FAILURE,\r\n    RETWEET_REQUEST,\r\n    RETWEET_SUCCESS,\r\n    RETWEET_FAILURE,\r\n  } from '../reducers/post';\r\n  import { ADD_POST_TO_ME, REMOVE_POST_OF_ME } from '../reducers/user';\r\n\r\n  function retweetAPI(data) {\r\n    return axios.post(`/post/${data}/retweet`);\r\n}\r\n\r\nfunction* retweet(action) {\r\n    try {\r\n        // yield delay(1000);\r\n        const result = yield call(retweetAPI, action.data);    //call을 쓰면 동기, fork를 쓰면 비동기. result값을 받고 진행해야 하므로 call을 사용.\r\n        // const id = shortId.generate();\r\n        yield put({\r\n            type: RETWEET_SUCCESS,\r\n            data: result.data,\r\n        });\r\n    } catch (err) {\r\n        console.error(err);\r\n        yield put({\r\n            type: RETWEET_FAILURE,\r\n            error: err.response.data\r\n        });\r\n    }    \r\n}\r\n\r\nfunction uploadImagesAPI(data) {\r\n    return axios.post('/post/images', data );\r\n}\r\n\r\nfunction* uploadImages(action) {\r\n    try {\r\n        // yield delay(1000);\r\n        const result = yield call(uploadImagesAPI, action.data);    //call을 쓰면 동기, fork를 쓰면 비동기. result값을 받고 진행해야 하므로 call을 사용.\r\n        // const id = shortId.generate();\r\n        yield put({\r\n            type: UPLOAD_IMAGES_SUCCESS,\r\n            data: result.data,\r\n        });\r\n    } catch (err) {\r\n        console.error(err);\r\n        yield put({\r\n            type: UPLOAD_IMAGES_FAILURE,\r\n            error: err.response.data\r\n        });\r\n    }    \r\n}\r\n\r\nfunction addPostAPI(data) {\r\n    return axios.post('/post', data);   //formdata는 바로 data로 보내줘야함. 객체로 하면 안됨\r\n}\r\n\r\nfunction* addPost(action) {\r\n    try {\r\n        // yield delay(1000);\r\n        const result = yield call(addPostAPI, action.data);    //call을 쓰면 동기, fork를 쓰면 비동기. result값을 받고 진행해야 하므로 call을 사용.\r\n        // const id = shortId.generate();\r\n        yield put({\r\n            type: ADD_POST_SUCCESS,\r\n            data: result.data,\r\n        });\r\n        yield put({\r\n            type: ADD_POST_TO_ME,\r\n            data: result.data.id,\r\n        });\r\n    } catch (err) {\r\n        console.error(err);\r\n        yield put({\r\n            type: ADD_POST_FAILURE,\r\n            error: err.response.data\r\n        })\r\n    }    \r\n}\r\n\r\nfunction likePostAPI() {\r\n    return axios.patch('/post/${data}/like');\r\n}\r\n\r\nfunction* likePost(action) {\r\n    try {      \r\n        const result = yield call(likePostAPI, action.data);\r\n        yield put({\r\n            type: LIKE_POST_SUCCESS,\r\n            data: result.data,\r\n        });\r\n    } catch (err) {\r\n        console.error(err);\r\n        yield put({\r\n            type: LIKE_POST_FAILURE,\r\n            error: err.response.data\r\n        })\r\n    }    \r\n}\r\n\r\nfunction unlikePostAPI() {\r\n    return axios.delete('/post/${data}/like')\r\n}\r\n\r\nfunction* unlikePost(action) {\r\n    try {      \r\n        const result = yield call(unlikePostAPI, action.data);\r\n        yield put({\r\n            type: UNLIKE_POST_SUCCESS,\r\n            data: result.data,\r\n        });\r\n    } catch (err) {\r\n        console.error(err);\r\n        yield put({\r\n            type: UNLIKE_POST_FAILURE,\r\n            error: err.response.data\r\n        })\r\n    }    \r\n}\r\n\r\nfunction loadPostsAPI(lastId) {\r\n    return axios.get(`/posts?lastId=${lastId || 0}`);\r\n}\r\n\r\nfunction* loadPosts(action) {\r\n    try {      \r\n        const result = yield call(loadPostsAPI, action.lastId);\r\n        yield put({\r\n            type: LOAD_POSTS_SUCCESS,\r\n            data: result.data,\r\n        });\r\n    } catch (err) {\r\n        console.error(err);\r\n        yield put({\r\n            type: LOAD_POSTS_FAILURE,\r\n            error: err.response.data\r\n        })\r\n    }    \r\n}\r\n\r\nfunction loadHashtagPostsAPI(data, lastId) {\r\n    return axios.get(`/hashtag/${encodeURIComponent(data)}?lastId=${lastId || 0}`);\r\n}\r\n\r\nfunction* loadHashtagPosts(action) {\r\n    try {      \r\n        const result = yield call(loadHashtagPostsAPI, action.data, action.lastId);\r\n        yield put({\r\n            type: LOAD_HASHTAG_POSTS_SUCCESS,\r\n            data: result.data,\r\n        });\r\n    } catch (err) {\r\n        console.error(err);\r\n        yield put({\r\n            type: LOAD_HASHTAG_POSTS_FAILURE,\r\n            error: err.response.data\r\n        })\r\n    }    \r\n}\r\n\r\nfunction loadUserPostsAPI(data, lastId) {\r\n    return axios.get(`/user/${data}/posts?lastId=${lastId || 0}`);\r\n}\r\n\r\nfunction* loadUserPosts(action) {\r\n    try {      \r\n        const result = yield call(loadUserPostsAPI, action.data, action.lastId);\r\n        yield put({\r\n            type: LOAD_USER_POSTS_SUCCESS,\r\n            data: result.data,\r\n        });\r\n    } catch (err) {\r\n        console.error(err);\r\n        yield put({\r\n            type: LOAD_USER_POSTS_FAILURE,\r\n            error: err.response.data\r\n        })\r\n    }    \r\n}\r\n\r\nfunction loadPostAPI(data) {\r\n    return axios.get(`/post/${data}`);\r\n}\r\n\r\nfunction* loadPost(action) {\r\n    try {      \r\n        const result = yield call(loadPostAPI, action.data);\r\n        yield put({\r\n            type: LOAD_POST_SUCCESS,\r\n            data: result.data,\r\n        });\r\n    } catch (err) {\r\n        console.error(err);\r\n        yield put({\r\n            type: LOAD_POST_FAILURE,\r\n            error: err.response.data\r\n        })\r\n    }    \r\n}\r\n\r\nfunction removePostAPI(data) {\r\n    return axios.post(`/post/${data}`)\r\n}\r\n\r\nfunction* removePost(action) {\r\n    try {\r\n        const result = yield call(removePostAPI, action.data);    //call을 쓰면 동기, fork를 쓰면 비동기. result값을 받고 진행해야 하므로 call을 사용.\r\n\r\n        yield put({         //post reducer 조작 부분\r\n            type: REMOVE_POST_SUCCESS,\r\n            data: result.data,\r\n        });\r\n        yield put({         //user reducer 조작 부분\r\n            type: REMOVE_POST_OF_ME,\r\n            data: action.data,\r\n        });\r\n    } catch (err) {\r\n        console.error(err);\r\n        yield put({\r\n            type: REMOVE_POST_FAILURE,\r\n            error: err.response.data\r\n        })\r\n    }    \r\n}\r\n\r\nfunction addCommentAPI(data) {\r\n    return axios.post(`/post/${data.postId}/comment`, data);  //POST /post/1/comment   1=postId\r\n}\r\n\r\nfunction* addComment(action) {\r\n    try {\r\n        // yield delay(1000);\r\n        const result = yield call(addCommentAPI, action.data);    //call을 쓰면 동기, fork를 쓰면 비동기. result값을 받고 진행해야 하므로 call을 사용.\r\n        yield put({\r\n            type: ADD_COMMENT_SUCCESS,\r\n            data: result.data,\r\n        });\r\n    } catch (err) {\r\n        console.error(err);\r\n        yield put({\r\n            type: ADD_COMMENT_FAILURE,\r\n            error: err.response.data\r\n        })\r\n    }    \r\n}\r\n\r\nfunction* watchRetweet() {\r\n    yield takeLatest(RETWEET_REQUEST, retweet);\r\n}\r\n\r\nfunction* watchUploadImages() {\r\n    yield takeLatest(UPLOAD_IMAGES_REQUEST, uploadImages);\r\n}\r\n\r\nfunction* watchLikePost() {\r\n    yield takeLatest(LIKE_POST_REQUEST, likePost);\r\n}\r\n\r\nfunction* watchUnlikePost() {\r\n    yield takeLatest(UNLIKE_POST_REQUEST, unlikePost);\r\n}\r\n\r\nfunction* watchAddPost() {\r\n    yield takeLatest(ADD_POST_REQUEST, addPost);\r\n}\r\n\r\nfunction* watchLoadHashtagPosts() {\r\n    yield throttle(5000, LOAD_HASHTAG_POSTS_REQUEST, loadHashtagPosts);\r\n}\r\n\r\nfunction* watchLoadUserPosts() {\r\n    yield throttle(5000, LOAD_USER_POSTS_REQUEST, loadUserPosts);\r\n}\r\n\r\nfunction* watchLoadPosts() {\r\n    yield throttle(5000, LOAD_POSTS_REQUEST, loadPosts);\r\n}\r\n\r\nfunction* watchLoadPost() {\r\n    yield throttle(5000, LOAD_POST_REQUEST, loadPost);\r\n}\r\n\r\nfunction* watchRemovePost() {\r\n    yield takeLatest(REMOVE_POST_REQUEST, removePost);\r\n}\r\n\r\nfunction* watchAddComment() {\r\n    yield takeLatest(ADD_COMMENT_REQUEST, addComment);\r\n}\r\n\r\nexport default function* postSaga() {\r\n    yield all([\r\n        fork(watchRetweet),\r\n        fork(watchUploadImages),\r\n        fork(watchLikePost),\r\n        fork(watchUnlikePost),\r\n        fork(watchAddPost),\r\n        fork(watchLoadUserPosts),\r\n        fork(watchLoadHashtagPosts),\r\n        fork(watchLoadPosts),\r\n        fork(watchLoadPost),\r\n        fork(watchRemovePost),\r\n        fork(watchAddComment),\r\n    ]);\r\n}","import { all, fork, put, delay, takeLatest, call } from \"@redux-saga/core/effects\";\r\nimport axios from 'axios';\r\nimport {\r\n    FOLLOW_FAILURE,\r\n    FOLLOW_REQUEST,\r\n    FOLLOW_SUCCESS,\r\n    UNFOLLOW_FAILURE,\r\n    UNFOLLOW_REQUEST,\r\n    UNFOLLOW_SUCCESS,\r\n    LOG_IN_FAILURE,\r\n    LOG_IN_REQUEST,\r\n    LOG_IN_SUCCESS,\r\n    LOG_OUT_FAILURE,\r\n    LOG_OUT_REQUEST,\r\n    LOG_OUT_SUCCESS,\r\n    SIGN_UP_FAILURE,\r\n    SIGN_UP_REQUEST,\r\n    SIGN_UP_SUCCESS,  \r\n    LOAD_MY_INFO_REQUEST,\r\n    LOAD_MY_INFO_SUCCESS,\r\n    LOAD_MY_INFO_FAILURE,\r\n    LOAD_USER_FAILURE,\r\n    LOAD_USER_REQUEST,\r\n    LOAD_USER_SUCCESS,\r\n    CHANGE_NICKNAME_REQUEST,\r\n    CHANGE_NICKNAME_SUCCESS,\r\n    CHANGE_NICKNAME_FAILURE,\r\n    REMOVE_FOLLOWER_REQUEST,\r\n    REMOVE_FOLLOWER_SUCCESS,\r\n    REMOVE_FOLLOWER_FAILURE,\r\n    LOAD_FOLLOWERS_REQUEST,\r\n    LOAD_FOLLOWERS_SUCCESS,\r\n    LOAD_FOLLOWERS_FAILURE,\r\n    LOAD_FOLLOWINGS_REQUEST,\r\n    LOAD_FOLLOWINGS_SUCCESS,\r\n    LOAD_FOLLOWINGS_FAILURE,\r\n  } from '../reducers/user';\r\n  \r\nfunction removeFollowerAPI(data) {\r\n    return axios.delete(`/user/follower/${data}`);\r\n}\r\n\r\nfunction* removeFollower(action) {\r\n    try {\r\n        \r\n        const result = yield call(removeFollowerAPI, action.data);    //call을 쓰면 동기, fork를 쓰면 비동기. result값을 받고 진행해야 하므로 call을 사용.\r\n        yield put({\r\n            type: REMOVE_FOLLOWER_SUCCESS,\r\n            data: result.data,\r\n        });\r\n    } catch (err) {\r\n        console.error(err);\r\n        yield put({\r\n            type: REMOVE_FOLLOWER_FAILURE,\r\n            error: err.response.data\r\n        })\r\n    }    \r\n}\r\n\r\nfunction loadFollowersAPI(data) {\r\n    return axios.get('/user/followers', data);\r\n}\r\n\r\nfunction* loadFollowers(action) {\r\n    try {\r\n        \r\n        const result = yield call(loadFollowersAPI, action.data);    //call을 쓰면 동기, fork를 쓰면 비동기. result값을 받고 진행해야 하므로 call을 사용.\r\n        yield put({\r\n            type: LOAD_FOLLOWERS_SUCCESS,\r\n            data: result.data,\r\n        });\r\n    } catch (err) {\r\n        console.error(err);\r\n        yield put({\r\n            type: LOAD_FOLLOWERS_FAILURE,\r\n            error: err.response.data\r\n        })\r\n    }    \r\n}\r\n\r\nfunction loadFollowingsAPI(data) {\r\n    return axios.get('/user/followings', data);\r\n}\r\n\r\nfunction* loadFollowings(action) {\r\n    try {\r\n        \r\n        const result = yield call(loadFollowingsAPI, action.data);    //call을 쓰면 동기, fork를 쓰면 비동기. result값을 받고 진행해야 하므로 call을 사용.\r\n        yield put({\r\n            type: LOAD_FOLLOWINGS_SUCCESS,\r\n            data: result.data,\r\n        });\r\n    } catch (err) {\r\n        console.error(err);\r\n        yield put({\r\n            type: LOAD_FOLLOWINGS_FAILURE,\r\n            error: err.response.data\r\n        })\r\n    }    \r\n}\r\n\r\nfunction changeNicknameAPI(data) {\r\n    return axios.patch('/user/nickname', { nickname: data });\r\n}\r\n\r\nfunction* changeNickname(action) {\r\n    try {\r\n        \r\n        const result = yield call(changeNicknameAPI, action.data);    //call을 쓰면 동기, fork를 쓰면 비동기. result값을 받고 진행해야 하므로 call을 사용.\r\n        yield put({\r\n            type: CHANGE_NICKNAME_SUCCESS,\r\n            data: result.data,\r\n        });\r\n    } catch (err) {\r\n        console.error(err);\r\n        yield put({\r\n            type: CHANGE_NICKNAME_FAILURE,\r\n            error: err.response.data\r\n        })\r\n    }    \r\n}\r\n\r\nfunction loadMyInfoAPI() {\r\n    return axios.get('/user');\r\n}\r\n\r\nfunction* loadMyInfo() {\r\n    try {        \r\n        const result = yield call(loadMyInfoAPI);    //call을 쓰면 동기, fork를 쓰면 비동기. result값을 받고 진행해야 하므로 call을 사용.\r\n        yield put({\r\n            type: LOAD_MY_INFO_SUCCESS,\r\n            data: result.data,\r\n        });\r\n    } catch (err) {\r\n        console.error(err);\r\n        yield put({\r\n            type: LOAD_MY_INFO_FAILURE,\r\n            error: err.response.data\r\n        })\r\n    }    \r\n}\r\n\r\nfunction loadUserAPI(data) {\r\n    return axios.get(`/user/${data}`);\r\n}\r\n\r\nfunction* loadUser(action) {\r\n    try {\r\n        \r\n        const result = yield call(loadUserAPI, action.data);    //call을 쓰면 동기, fork를 쓰면 비동기. result값을 받고 진행해야 하므로 call을 사용.\r\n        yield put({\r\n            type: LOAD_USER_SUCCESS,\r\n            data: result.data,\r\n        });\r\n    } catch (err) {\r\n        console.error(err);\r\n        yield put({\r\n            type: LOAD_USER_FAILURE,\r\n            error: err.response.data\r\n        })\r\n    }    \r\n}\r\n\r\nfunction followAPI(data) {\r\n    return axios.post(`/user/${data}/follow`)\r\n}\r\n\r\nfunction* follow(action) {\r\n    try {\r\n        const result = yield call(followAPI, action.data);    //call을 쓰면 동기, fork를 쓰면 비동기. result값을 받고 진행해야 하므로 call을 사용.\r\n        yield put({\r\n            type: FOLLOW_SUCCESS,\r\n            data: result.data\r\n        });\r\n    } catch (err) {\r\n        console.error(err);\r\n        yield put({\r\n            type: FOLLOW_FAILURE,\r\n            error: err.response.data\r\n        })\r\n    }    \r\n}\r\n\r\nfunction unfollowAPI(data) {\r\n    return axios.delete(`/user/${data}/follow`)\r\n}\r\n\r\nfunction* unfollow(action) {\r\n    try {\r\n        const result = yield call(unfollowAPI, action.data);\r\n        yield put({\r\n            type: UNFOLLOW_SUCCESS,\r\n            data: result.data\r\n        });\r\n    } catch (err) {\r\n        console.error(err);\r\n        yield put({\r\n            type: UNFOLLOW_FAILURE,\r\n            error: err.response.data\r\n        })\r\n    }    \r\n}\r\n\r\nfunction loginAPI(data) {\r\n    return axios.post('/user/login', data)\r\n}\r\n\r\nfunction* logIn(action) {\r\n    try {\r\n        \r\n        const result = yield call(loginAPI, action.data);    //call을 쓰면 동기, fork를 쓰면 비동기. result값을 받고 진행해야 하므로 call을 사용.\r\n        yield put({\r\n            type: LOG_IN_SUCCESS,\r\n            data: result.data,\r\n        });\r\n    } catch (err) {\r\n        console.error(err);\r\n        yield put({\r\n            type: LOG_IN_FAILURE,\r\n            error: err.response.data\r\n        });\r\n    }    \r\n}\r\n\r\nfunction logoutAPI() {\r\n    return axios.post('/logout')\r\n}\r\n\r\nfunction* logOut() {\r\n    try {\r\n        // yield delay(1000);\r\n        // const result = yield call(logoutAPI);    //call을 쓰면 동기, fork를 쓰면 비동기. result값을 받고 진행해야 하므로 call을 사용.\r\n        yield call(logoutAPI);\r\n        yield put({\r\n            type: LOG_OUT_SUCCESS,\r\n        });\r\n    } catch (err) {\r\n        console.error(err);\r\n        yield put({\r\n            type: LOG_OUT_FAILURE,\r\n            error: err.response.data\r\n        });\r\n    }    \r\n}\r\n\r\nfunction signUpAPI(data) {\r\n    return axios.post('/user', data);\r\n}\r\n\r\nfunction* signUp(action) {\r\n    try {\r\n        const result = yield call(signUpAPI, action.data);\r\n        console.log(result);\r\n        yield put({\r\n            type: SIGN_UP_SUCCESS,\r\n        });\r\n    } catch (err) {\r\n        console.error(err);\r\n        yield put({\r\n            type: SIGN_UP_FAILURE,\r\n            error: err.response.data\r\n        });\r\n    }    \r\n}\r\n\r\nfunction* watchRemoveFollower() {\r\n    yield takeLatest(REMOVE_FOLLOWER_REQUEST, removeFollower);\r\n}\r\n\r\nfunction* watchLoadFollowing() {\r\n    yield takeLatest(LOAD_FOLLOWINGS_REQUEST, loadFollowings);\r\n}\r\n\r\nfunction* watchLoadFollowers() {\r\n    yield takeLatest(LOAD_FOLLOWERS_REQUEST, loadFollowers);\r\n}\r\n\r\nfunction* watchChangeNickname() {\r\n    yield takeLatest(CHANGE_NICKNAME_REQUEST, changeNickname);\r\n}\r\n\r\nfunction* watchLoadMyInfo() {\r\n    yield takeLatest(LOAD_MY_INFO_REQUEST, loadMyInfo);\r\n}\r\n\r\nfunction* watchLoadUser() {\r\n    yield takeLatest(LOAD_USER_REQUEST, loadUser);\r\n}\r\n\r\nfunction* watchFollow() {\r\n    yield takeLatest(FOLLOW_REQUEST, follow);\r\n}\r\n\r\nfunction* watchUnfollow() {\r\n    yield takeLatest(UNFOLLOW_REQUEST, unfollow);\r\n}\r\n\r\nfunction* watchLogin() {\r\n    yield takeLatest(LOG_IN_REQUEST, logIn);\r\n}\r\n\r\nfunction* watchLogOut() {\r\n    yield takeLatest(LOG_OUT_REQUEST, logOut);\r\n}\r\n\r\nfunction* watchSignUp() {\r\n    yield takeLatest(SIGN_UP_REQUEST, signUp);\r\n}\r\n\r\nexport default function* userSaga() {\r\n    yield all([\r\n        fork(watchRemoveFollower),\r\n        fork(watchLoadFollowing),\r\n        fork(watchLoadFollowers),\r\n        fork(watchChangeNickname),\r\n        fork(watchLoadMyInfo),\r\n        fork(watchLoadUser),\r\n        fork(watchFollow),\r\n        fork(watchUnfollow),\r\n        fork(watchLogin),\r\n        fork(watchLogOut),\r\n        fork(watchSignUp)\r\n    ]);\r\n}","import { all, fork } from 'redux-saga/effects';\r\nimport axios from 'axios';\r\n\r\nimport postSaga from './post';\r\nimport userSaga from './user';\r\n\r\naxios.defaults.baseURL = 'http://localhost:3065';\r\naxios.defaults.withCredentials = true;\r\n\r\nexport default function* rootSaga() {\r\n    yield all([\r\n        fork(postSaga),\r\n        fork(userSaga),\r\n    ]);\r\n}","import {createWrapper } from 'next-redux-wrapper';\r\nimport { applyMiddleware, compose, createStore } from 'redux';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport createSagaMiddleware from 'redux-saga';\r\n\r\nimport reducer from '../reducers';\r\nimport rootSaga from '../sagas';\r\n\r\nconst loggerMiddleware = ({ dispatch, getState }) => (next) => (action) => {\r\n    console.log(action);\r\n    return next(action);\r\n};\r\n\r\nconst configureStore = () => {\r\n    const sagaMiddleware = createSagaMiddleware();\r\n    const middlewares = [sagaMiddleware, loggerMiddleware];\r\n    const enhancer = process.env.NODE_ENV === 'production'\r\n        ? compose(applyMiddleware(...middlewares))\r\n        : composeWithDevTools(applyMiddleware(...middlewares))\r\n    const store = createStore(reducer, enhancer);\r\n    store.sagaTask = sagaMiddleware.run(rootSaga);\r\n    return store;\r\n};\r\n\r\nconst wrapper = createWrapper(configureStore, \r\n    {debug: process.env.NODE_ENV === 'development',});      //debug 부분이 true면 redux에 관한 자세한 설명이 나오므로 dev환경에선 true로 해주는게 좋음.\r\n\r\nexport default wrapper;","module.exports = require(\"next-redux-wrapper\");","import produce from 'immer';\r\n\r\nexport const initialState = {\r\n    loadMyInfoLoading: false, // 유저 정보 가져오기 시도중\r\n    loadMyInfoDone: false,\r\n    loadMyInfoError: null,\r\n    loadUserLoading: false, //유저 정보 가져오기 시도중\r\n    loadUserDone: false,\r\n    loadUserError: null, \r\n    followLoading: false, //팔로우 시도중\r\n    followDone: false,\r\n    followError: null, \r\n    unfollowLoading: false, //언팔로우 시도중\r\n    unfollowDone: false,\r\n    unfollowError: null, \r\n    logInLoading: false, //로그인 시도중\r\n    logInDone: false,\r\n    logInError: null, //로그아웃 시도중\r\n    logOutLoading: false, \r\n    logOutDone: false,\r\n    logOutError: null, \r\n    signUpLoading: false, \r\n    signUpDone: false,\r\n    signUpError: null, \r\n    changeNicknameLoading: false,  //닉네임 변경 시도중\r\n    changeNicknameDone: false,\r\n    changeNicknameError: null, \r\n    loadFollowingsLoading: false,  \r\n    loadFollowingsDone: false,\r\n    loadFollowingsError: null, \r\n    loadFollowersLoading: false,  \r\n    loadFollowersDone: false,\r\n    loadFollowersError: null, \r\n    removeFollowerLoading: false,  \r\n    removeFollowerDone: false,\r\n    removeFollowerError: null, \r\n\r\n    me: null,\r\n    signUpData: {},\r\n    loginData: {},\r\n}\r\n\r\nexport const LOAD_MY_INFO_REQUEST = 'LOAD_MY_INFO_REQUEST';\r\nexport const LOAD_MY_INFO_SUCCESS = 'LOAD_MY_INFO_SUCCESS';\r\nexport const LOAD_MY_INFO_FAILURE = 'LOAD_MY_INFO_FAILURE';\r\n\r\nexport const LOAD_USER_REQUEST = 'LOAD_USER_REQUEST';\r\nexport const LOAD_USER_SUCCESS = 'LOAD_USER_SUCCESS';\r\nexport const LOAD_USER_FAILURE = 'LOAD_USER_FAILURE';\r\n\r\nexport const LOG_IN_REQUEST = 'LOG_IN_REQUEST';\r\nexport const LOG_IN_SUCCESS = 'LOG_IN_SUCCESS';\r\nexport const LOG_IN_FAILURE = 'LOG_IN_FAILURE';\r\n\r\nexport const LOG_OUT_REQUEST = 'LOG_OUT_REQUEST';\r\nexport const LOG_OUT_SUCCESS = 'LOG_OUT_SUCCESS';\r\nexport const LOG_OUT_FAILURE = 'LOG_OUT_FAILURE';\r\n\r\nexport const SIGN_UP_REQUEST = 'SIGN_UP_REQUEST';\r\nexport const SIGN_UP_SUCCESS = 'SIGN_UP_SUCCESS';\r\nexport const SIGN_UP_FAILURE = 'SIGN_UP_FAILURE';\r\n\r\nexport const CHANGE_NICKNAME_REQUEST = 'CHANGE_NICKNAME_REQUEST';\r\nexport const CHANGE_NICKNAME_SUCCESS = 'CHANGE_NICKNAME_SUCCESS';\r\nexport const CHANGE_NICKNAME_FAILURE = 'CHANGE_NICKNAME_FAILURE';\r\n\r\nexport const FOLLOW_REQUEST = 'FOLLOW_REQUEST';\r\nexport const FOLLOW_SUCCESS = 'FOLLOW_SUCCESS';\r\nexport const FOLLOW_FAILURE = 'FOLLOW_FAILURE';\r\n\r\nexport const UNFOLLOW_REQUEST = 'UNFOLLOW_REQUEST';\r\nexport const UNFOLLOW_SUCCESS = 'UNFOLLOW_SUCCESS';\r\nexport const UNFOLLOW_FAILURE = 'UNFOLLOW_FAILURE';\r\n\r\nexport const REMOVE_FOLLOWER_REQUEST = 'REMOVE_FOLLOWER_REQUEST';\r\nexport const REMOVE_FOLLOWER_SUCCESS = 'REMOVE_FOLLOWER_SUCCESS';\r\nexport const REMOVE_FOLLOWER_FAILURE = 'REMOVE_FOLLOWER_FAILURE';\r\n\r\nexport const LOAD_FOLLOWINGS_REQUEST = 'LOAD_FOLLOWINGS_REQUEST';\r\nexport const LOAD_FOLLOWINGS_SUCCESS = 'LOAD_FOLLOWINGS_SUCCESS';\r\nexport const LOAD_FOLLOWINGS_FAILURE = 'LOAD_FOLLOWINGS_FAILURE';\r\n\r\nexport const LOAD_FOLLOWERS_REQUEST = 'UNFOLLOW_REQUEST';\r\nexport const LOAD_FOLLOWERS_SUCCESS = 'UNFOLLOW_SUCCESS';\r\nexport const LOAD_FOLLOWERS_FAILURE = 'UNFOLLOW_FAILURE';\r\n\r\nexport const ADD_POST_TO_ME = 'ADD_POST_TO_ME';\r\nexport const REMOVE_POST_OF_ME = 'REMOVE_POST_OF_ME';\r\n\r\n// const dummyUser = (data) => ({\r\n//     ...data,\r\n//     nickname: 'tony',\r\n//     id: 1,\r\n//     Posts: [{ id: 1},],\r\n//     Followings: [{ nickname: 'tm' }, { nickname: 'tty' }],\r\n//     Followers: [{ nickname: 'tm' }, { nickname: 'tty' }],\r\n// });\r\n\r\nexport const loginRequestAction = (data) => ({\r\n    type: LOG_IN_REQUEST,\r\n    data,\r\n});\r\n\r\nexport const logoutRequestAction = () =>  ({\r\n    type: LOG_OUT_REQUEST,\r\n});\r\n\r\nconst reducer = (state = initialState, action) => {\r\n    return produce(state, (draft) => {\r\n        switch (action.type) {    \r\n            case REMOVE_FOLLOWER_REQUEST:\r\n                draft.removeFollowerLoading = true;\r\n                draft.removeFollowerError = null,\r\n                draft.removeFollowerDone = false;\r\n                break;\r\n            case REMOVE_FOLLOWER_SUCCESS:\r\n                draft.removeFollowerLoading = false;\r\n                draft.me.Followers = draft.me.Followers.filter((v) => v.id !== action.data.UserId);\r\n                draft.removeFollowerDone = true;\r\n                break;\r\n            case REMOVE_FOLLOWER_FAILURE:\r\n                draft.removeFollowerloading = false;\r\n                draft.removeFollowerError = action.error;\r\n                break;   \r\n            case LOAD_FOLLOWINGS_REQUEST:\r\n                draft.loadFollowingsLoading = true;\r\n                draft.loadFollowingsError = null,\r\n                draft.loadFollowingsDone = false;\r\n                break;\r\n            case LOAD_FOLLOWINGS_SUCCESS:\r\n                draft.loadFollowingsLoading = false;\r\n                draft.me.Followings = action.data;\r\n                draft.loadFollowingsDone = true;\r\n                break;\r\n            case LOAD_FOLLOWINGS_FAILURE:\r\n                draft.loadFollowingsloading = false;\r\n                draft.loadFollowingsError = action.error;\r\n                break;   \r\n            case LOAD_FOLLOWERS_REQUEST:\r\n                draft.loadFollowersLoading = true;\r\n                draft.loadFollowersError = null,\r\n                draft.loadFollowersDone = false;\r\n                break;\r\n            case LOAD_FOLLOWERS_SUCCESS:\r\n                draft.loadFollowersLoading = false;\r\n                draft.me.Followers = action.data;\r\n                draft.loadFollowersDone = true;\r\n                break;\r\n            case LOAD_FOLLOWERS_FAILURE:\r\n                draft.loadFollowersloading = false;\r\n                draft.loadFollowersError = action.error;\r\n                break;   \r\n            case LOAD_MY_INFO_REQUEST:\r\n                draft.loadMyInfoLoading = true;\r\n                draft.loadMyInfoError = null,\r\n                draft.loadMyInfoDone = false;\r\n                break;\r\n            case LOAD_MY_INFO_SUCCESS:\r\n                draft.loadMyInfoLoading = false;\r\n                draft.me = action.data;\r\n                draft.loadMyInfoDone = true;\r\n                break;\r\n            case LOAD_MY_INFO_FAILURE:\r\n                draft.loadMyInfoloading = false;\r\n                draft.loadMyInfoError = action.error;\r\n                break;   \r\n            case LOAD_USER_REQUEST:\r\n                draft.loadUserLoading = true;\r\n                draft.loadUserError = null,\r\n                draft.loadUserDone = false;\r\n                break;\r\n            case LOAD_USER_SUCCESS:\r\n                draft.loadUserLoading = false;\r\n                draft.userInfo = action.data;\r\n                draft.loadUserDone = true;\r\n                break;\r\n            case LOAD_USER_FAILURE:\r\n                draft.loadUserloading = false;\r\n                draft.loadUserError = action.error;\r\n                break;   \r\n            case FOLLOW_REQUEST:\r\n                draft.followLoading = true;\r\n                draft.followError = null,\r\n                draft.followDone = false;\r\n                break;\r\n            case FOLLOW_SUCCESS:\r\n                draft.followLoading = false;\r\n                draft.me.Followings.push({ id: action.data.UserId });\r\n                draft.followDone = true;\r\n                break;\r\n            case FOLLOW_FAILURE:\r\n                draft.followloading = false;\r\n                draft.followError = action.error;\r\n                break;\r\n            case UNFOLLOW_REQUEST:\r\n                draft.unfollowLoading = true;\r\n                draft.unfollowError = null,\r\n                draft.unfollowDone = false;\r\n                break;\r\n            case UNFOLLOW_SUCCESS:\r\n                draft.unfollowLoading = false;\r\n                draft.me.Followings = draft.me.Followings.filter((v) => v.id !== action.data.UserId );\r\n                draft.unfollowDone = true;\r\n                break;\r\n            case UNFOLLOW_FAILURE:\r\n                draft.unfollowLoading = false;\r\n                draft.unfollowError = action.error;\r\n                break;\r\n            case LOG_IN_REQUEST:\r\n                draft.logInLoading = true;\r\n                draft.logInError = null,\r\n                draft.logInDone = false;\r\n                break;\r\n                // return {\r\n                //     ...state,\r\n                //     loginLoading: true,\r\n                //     logInError: null,\r\n                //     logInDone: false,\r\n                // };\r\n            case LOG_IN_SUCCESS:\r\n                draft.logInLoading = false;\r\n                draft.me = action.data;\r\n                draft.logInDone = true;\r\n                break;\r\n                // return {\r\n                //     ...state,\r\n                //     logInLoading: false,\r\n                //     logInDone: true,\r\n                //     me: dummyUser(action.data),\r\n                // };\r\n            case LOG_IN_FAILURE:\r\n                draft.logInLoading = false;\r\n                draft.logInError = action.error;\r\n                break;\r\n                // return {\r\n                //     ...state,\r\n                //     logInLoading: false,\r\n                //     logInError: action.error,\r\n                // };\r\n            case LOG_OUT_REQUEST:\r\n                draft.logOutLoading = true;\r\n                draft.logOutDone = false;\r\n                draft.logOutError = null;\r\n                break;\r\n                // return {\r\n                //     ...state,\r\n                //     logOutLoading: true,\r\n                //     logOutDone: false,\r\n                //     logOutError: null,\r\n                // };\r\n            case LOG_OUT_SUCCESS:\r\n                draft.logOutLoading = false;\r\n                draft.logOutDone = true;\r\n                draft.me = null;\r\n                break;\r\n                // return {\r\n                //     ...state,\r\n                //     logOutLoading: false,\r\n                //     logOutDone: true,\r\n                //     me: null,\r\n                // };\r\n            case LOG_OUT_FAILURE:\r\n                draft.logOutLoading = false;\r\n                draft.logOutError = action.error;\r\n                break;\r\n                // return {\r\n                //     ...state,\r\n                //     logOutLoading: false,\r\n                //     logOutError: action.error,\r\n                // };\r\n            case SIGN_UP_REQUEST:\r\n                draft.signUpLoading = true;\r\n                draft.signUpDone = false;\r\n                draft.signUpError = null;\r\n                break;\r\n                // return {\r\n                //     ...state,\r\n                //     signUpLoading: true,\r\n                //     signUpDone: false,\r\n                //     signUpError: null,\r\n                // };\r\n            case SIGN_UP_SUCCESS:\r\n                draft.signUpLoading = false;\r\n                draft.signUpDone = true;\r\n                break;\r\n                // return {\r\n                //     ...state,\r\n                //     signUpLoading: false,\r\n                //     signUpDone: true,\r\n                // };\r\n            case SIGN_UP_FAILURE:\r\n                draft.signUpLoading = false;\r\n                draft.signUpError = action.error;\r\n                break;\r\n                // return {\r\n                //     ...state,\r\n                //     signUpLoading: false,\r\n                //     signUpError: action.error,\r\n                // };\r\n            case CHANGE_NICKNAME_REQUEST:\r\n                draft.changeNicknameLoading = true;\r\n                draft.changeNicknameDone = false;\r\n                draft.changeNicknameError = null;\r\n                break;\r\n                // return {\r\n                //     ...state,\r\n                //     changeNicknameLoading: true,\r\n                //     changeNicknameDone: false,\r\n                //     changeNicknameError: null,\r\n                // };\r\n            case CHANGE_NICKNAME_SUCCESS:\r\n                draft.me.nickname = action.data.nickname;\r\n                draft.changeNicknameLoading = false;\r\n                draft.changeNicknameDone = true;\r\n                break;\r\n                // return {\r\n                //     ...state,\r\n                //     changeNicknameLoading: false,\r\n                //     changeNicknameDone: true,\r\n                // };\r\n            case CHANGE_NICKNAME_FAILURE:\r\n                draft.changeNicknameLoading = false;\r\n                draft.changeNicknameError = action.error;\r\n                break;\r\n                // return {\r\n                //     ...state,\r\n                //     changeNicknameLoading: false,\r\n                //     changeNicknameError: action.error,\r\n                // };\r\n            case ADD_POST_TO_ME:\r\n                draft.me.Posts.unshift({ id: action.data });\r\n                break;\r\n                // return {\r\n                //     ...state,\r\n                //     me: {\r\n                //         ...state.me,\r\n                //         Posts: [{ id: action.data }, ...state.me.Posts]\r\n                //     },\r\n                // };\r\n            case REMOVE_POST_OF_ME:\r\n                draft.me.Posts = draft.me.Posts.filter((v) => v.id !== action.data);\r\n                break;\r\n                // return {\r\n                //     ...state,\r\n                //     me: {\r\n                //         ...state.me,\r\n                //         Posts: state.me.Posts.filter((v) => v.id === action.data),\r\n                //     },\r\n                // };\r\n    \r\n            default:\r\n                break;\r\n        }\r\n    });\r\n    \r\n};\r\n\r\nexport default reducer;","module.exports = require(\"redux-saga/effects\");","module.exports = require(\"immer\");","module.exports = require(\"@redux-saga/core/effects\");","module.exports = require(\"react\");","import shortId from 'shortid';\r\nimport produce from 'immer';\r\n// import faker from 'faker';\r\n\r\nexport const initialState = {\r\n    // mainPosts: [{\r\n    //     id: 1,\r\n    //     User: {\r\n    //         id: 1,\r\n    //         nickname: 'tonymoon',\r\n    //     },\r\n    //     content: 'first post #express',\r\n    //     Images: [{\r\n    //         id: shortId.generate(),\r\n    //         src: 'https://bookthumb-phinf.pstatic.net/cover/137/995/13799585.jpg?update=2018726',\r\n    //     }, {\r\n    //         id: shortId.generate(),\r\n    //         src: 'https://gimg.gilbut.co.kr/book/BN001958/rn_view_BN001958.jpg',\r\n    //     }, {\r\n    //         id: shortId.generate(),\r\n    //         src: 'https://gimg.gilbut.co.kr/book/BN001998/rn_view_BN001998.jpg',\r\n    //     }],\r\n    //     Comments: [{\r\n    //         id: shortId.generate(),\r\n    //         User: {\r\n    //             id: shortId.generate(),\r\n    //             nickname: 'nero',\r\n    //         },\r\n    //         content: 'congratulation!',        \r\n    //     }, {\r\n    //         id: shortId.generate(),\r\n    //         User: {\r\n    //             id: shortId.generate(),\r\n    //             nickname: 'moon',\r\n    //         },\r\n    //         content: 'haha nice',\r\n    //     }]\r\n    // }],\r\n    mainPosts: [],\r\n    imagePaths: [],\r\n    singlePost: null,\r\n    hasMorePost: true,\r\n    loadPostsLoading: false,\r\n    loadPostsDone: false,\r\n    loadPostsError: null,\r\n    loadPostLoading: false,\r\n    loadPostDone: false,\r\n    loadPostError: null,\r\n    likePostLoading: false,\r\n    likePostDone: false,\r\n    likePostError: null,\r\n    unlikePostLoading: false,\r\n    unlikePostDone: false,\r\n    unlikePostError: null,\r\n    addPostLoading: false,\r\n    addPostDone: false,\r\n    addPostError: null,\r\n    removePostLoading: false,\r\n    removePostDone: false,\r\n    removePostError: null,\r\n    addCommentLoading: false,\r\n    addCommentDone: false,\r\n    addCommentError: null,\r\n    uploadImagesLoading: false,\r\n    uploadImagesDone: false,\r\n    uploadImagesError: null,\r\n    retweetLoading: false,\r\n    retweetDone: false,\r\n    retweetError: null,\r\n}\r\n\r\n// export const generateDummyPost = (number) => Array(number).fill().map(() => ({\r\n//     id: shortId.generate(),\r\n//     User: {\r\n//         id: shortId.generate(),\r\n//         nickname: faker.name.findName()\r\n//     },\r\n//     content: faker.lorem.paragraph,\r\n//     Images: [{\r\n//         src: faker.image.image(),\r\n//     }],\r\n//     Comments: [{\r\n//         User: {\r\n//             id: shortId.generate(),\r\n//             nickname: faker.name.findName()\r\n//         },\r\n//         content: faker.lorem.sentence(),\r\n//     }],\r\n// }));\r\n\r\n// initialState.mainPosts = initialState.mainPosts.concat(generateDummyPost(10));\r\n\r\nexport const UPLOAD_IMAGES_REQUEST = 'UPLOAD_IMAGES_REQUEST';     \r\nexport const UPLOAD_IMAGES_SUCCESS = 'UPLOAD_IMAGES_SUCCESS'; \r\nexport const UPLOAD_IMAGES_FAILURE = 'UPLOAD_IMAGES_FAILURE'; \r\n\r\nexport const LIKE_POST_REQUEST = 'LIKE_POST_REQUEST';    //오타방지 차원에서 변수로 빼주는게 좋다. \r\nexport const LIKE_POST_SUCCESS = 'LIKE_POST_SUCCESS'; \r\nexport const LIKE_POST_FAILURE = 'LIKE_POST_FAILURE'; \r\n\r\nexport const UNLIKE_POST_REQUEST = 'UNLIKE_POST_REQUEST';    \r\nexport const UNLIKE_POST_SUCCESS = 'UNLIKE_POST_SUCCESS'; \r\nexport const UNLIKE_POST_FAILURE = 'UNLIKE_POST_FAILURE'; \r\n\r\nexport const LOAD_USER_POSTS_REQUEST = 'LOAD_USER_POSTS_REQUEST';    \r\nexport const LOAD_USER_POSTS_SUCCESS = 'LOAD_USER_POSTS_SUCCESS'; \r\nexport const LOAD_USER_POSTS_FAILURE = 'LOAD_USER_POSTS_FAILURE'; \r\n\r\nexport const LOAD_HASHTAG_POSTS_REQUEST = 'LOAD_HASHTAG_POSTS_REQUEST';    \r\nexport const LOAD_HASHTAG_POSTS_SUCCESS = 'LOAD_HASHTAG_POSTS_SUCCESS'; \r\nexport const LOAD_HASHTAG_POSTS_FAILURE = 'LOAD_HASHTAG_POSTS_FAILURE'; \r\n\r\nexport const LOAD_POSTS_REQUEST = 'LOAD_POSTS_REQUEST';    \r\nexport const LOAD_POSTS_SUCCESS = 'LOAD_POSTS_SUCCESS'; \r\nexport const LOAD_POSTS_FAILURE = 'LOAD_POSTS_FAILURE'; \r\n\r\nexport const LOAD_POST_REQUEST = 'LOAD_POST_REQUEST';    \r\nexport const LOAD_POST_SUCCESS = 'LOAD_POST_SUCCESS'; \r\nexport const LOAD_POST_FAILURE = 'LOAD_POST_FAILURE'; \r\n\r\nexport const ADD_POST_REQUEST = 'ADD_POST_REQUEST';    \r\nexport const ADD_POST_SUCCESS = 'ADD_POST_SUCCESS'; \r\nexport const ADD_POST_FAILURE = 'ADD_POST_FAILURE'; \r\n\r\nexport const REMOVE_POST_REQUEST = 'REMOVE_POST_REQUEST';   \r\nexport const REMOVE_POST_SUCCESS = 'REMOVE_POST_SUCCESS'; \r\nexport const REMOVE_POST_FAILURE = 'REMOVE_POST_FAILURE'; \r\n\r\nexport const ADD_COMMENT_REQUEST = 'ADD_COMMENT_REQUEST';    \r\nexport const ADD_COMMENT_SUCCESS = 'ADD_COMMENT_SUCCESS'; \r\nexport const ADD_COMMENT_FAILURE = 'ADD_COMMENT_FAILURE'; \r\n\r\nexport const RETWEET_REQUEST = 'RETWEET_REQUEST';    \r\nexport const RETWEET_SUCCESS = 'RETWEET_SUCCESS'; \r\nexport const RETWEET_FAILURE = 'RETWEET_FAILURE'; \r\n\r\nexport const REMOVE_IMAGE = 'REMOVE_IMAGE';\r\n\r\nexport const addPost = (data) => ({\r\n    type: ADD_POST_REQUEST,\r\n    data,\r\n});\r\n\r\nexport const addComment = (data) => ({\r\n    type: ADD_COMMENT_REQUEST,\r\n    data,\r\n});\r\n\r\n// const dummyPost = (data) => ({\r\n//     id: shortId.generate(),\r\n//     content: data,\r\n//     User: {\r\n//         id: 1,\r\n//         nickname: 'Tony',\r\n//     },\r\n//     Images: [],\r\n//     Comments: [],\r\n// });\r\n\r\n// const dummyComment = (data) => ({\r\n//     id: data.id,\r\n//     content: data.content,\r\n//     User: {\r\n//         id: 1,\r\n//         nickname: 'Tony',\r\n//     },\r\n// });\r\n\r\n// 이전 상태를 액션을 통해 다음상태로 만들어내는 함수 (불변성은 지키면서.)\r\nconst reducer = (state = initialState, action) => {\r\n    //immer (produce) 를 사용하면 알아서 불변성을 지켜준다.\r\n    return produce(state, (draft) => {\r\n        switch (action.type) { \r\n            case RETWEET_REQUEST:\r\n                draft.retweetLoading = true;\r\n                draft.retweetDone = false;\r\n                draft.retweetError = null;\r\n                break;\r\n            case RETWEET_SUCCESS:{\r\n                draft.retweetLoading = false;\r\n                draft.retweetDone = true;   \r\n                draft.mainPosts.unshift(actino.data);             \r\n                break;    \r\n            }\r\n            case RETWEET_FAILURE:\r\n                draft.retweetLoading = false;\r\n                draft.retweetError = action.error;\r\n                break;            \r\n            case REMOVE_IMAGE:  //이건 동기 함수, 나머진 비동기\r\n                draft.imagePaths = draft.imagePaths.filter((v, i) => i !== action.data);\r\n                break;\r\n            case UPLOAD_IMAGES_REQUEST:\r\n                draft.uploadImagesLoading = true;\r\n                draft.uploadImagesDone = false;\r\n                draft.uploadImagesError = null;\r\n                break;\r\n            case UPLOAD_IMAGES_SUCCESS:{\r\n                draft.imagePaths = action.data;\r\n                draft.uploadImagesLoading = false;\r\n                draft.uploadImagesDone = true;                \r\n                break;    \r\n            }\r\n            case UPLOAD_IMAGES_FAILURE:\r\n                draft.uploadImagesLoading = false;\r\n                draft.uploadImagesError = action.error;\r\n                break;            \r\n            case LIKE_POST_REQUEST:\r\n                draft.likePostLoading = true;\r\n                draft.likePostDone = false;\r\n                draft.likePostError = null;\r\n                break;\r\n            case LIKE_POST_SUCCESS:{\r\n                const post = draft.mainPosts.find((v) => v.id === action.data.PostId);\r\n                post.Likers.push({ id: action.data.UserId });\r\n                draft.likePostLoading = false;\r\n                draft.likePostDone = true;                \r\n                break;    \r\n            }\r\n            case LIKE_POST_FAILURE:\r\n                draft.likePostLoading = false;\r\n                draft.likePostError = action.error;\r\n                break;            \r\n            case UNLIKE_POST_REQUEST:\r\n                draft.unlikePostLoading = true;\r\n                draft.unlikePostDone = false;\r\n                draft.unlikePostError = null;\r\n                break;\r\n            case UNLIKE_POST_SUCCESS:{\r\n                const post = draft.mainPosts.find((v) => v.id === action.data.PostId);\r\n                post.Likers = post.Likers.filter((v) => v.id !== action.data.UserId);\r\n                draft.unlikePostLoading = false;\r\n                draft.unlikePostDone = true;                \r\n                break;    \r\n            }\r\n            case UNLIKE_POST_FAILURE:\r\n                draft.unlikePostLoading = false;\r\n                draft.unlikePostError = action.error;\r\n                    break;          \r\n            case LOAD_USER_POSTS_REQUEST:\r\n            case LOAD_HASHTAG_POSTS_REQUEST:         \r\n            case LOAD_POSTS_REQUEST:\r\n                draft.loadPostsLoading = true;\r\n                draft.loadPostsDone = false;\r\n                draft.loadPostsError = null;\r\n                break;\r\n            case LOAD_USER_POSTS_SUCCESS:\r\n            case LOAD_HASHTAG_POSTS_SUCCESS:   \r\n            case LOAD_POSTS_SUCCESS:\r\n                draft.loadPostsLoading = false;\r\n                draft.loadPostsDone = true;\r\n                draft.mainPosts = action.mainPosts.concat(action.data);\r\n                draft.hasMorePost = draft.data.length === 10;\r\n                break;    \r\n            case LOAD_USER_POSTS_FAILURE:\r\n            case LOAD_HASHTAG_POSTS_FAILURE:\r\n            case LOAD_POSTS_FAILURE:\r\n                draft.loadPostsLoading = false;\r\n                draft.loadPostsError = action.error;\r\n                break;            \r\n            case LOAD_POST_REQUEST:\r\n            draft.loadPostLoading = true;\r\n            draft.loadPostDone = false;\r\n            draft.loadPostError = null;\r\n            break;\r\n            case LOAD_POST_SUCCESS:\r\n                draft.loadPostLoading = false;\r\n                draft.loadPostDone = true;\r\n                draft.singlePost = action.data;\r\n                break;    \r\n            case LOAD_POST_FAILURE:\r\n                draft.loadPostLoading = false;\r\n                draft.loadPostError = action.error;\r\n                break;              \r\n            case ADD_POST_REQUEST:\r\n                draft.addPostLoading = true;\r\n                draft.addPostDone = false;\r\n                draft.addPostError = null;\r\n                break;\r\n                // return {\r\n                //     ...state,\r\n                //     addPostLoading: true,\r\n                //     addPostDone: false,\r\n                //     addPostError: null,\r\n                // }\r\n            case ADD_POST_SUCCESS:\r\n                draft.addPostLoading = false;\r\n                draft.addPostDone = true;\r\n                draft.mainPosts.unshift(action.data);\r\n                draft.imagePaths = [];\r\n                break;\r\n                // return {\r\n                //     ...state,\r\n                //     mainPosts: [dummyPost(action.data), ...state.mainPosts],\r\n                //     addPostLoading: false,\r\n                //     addPostDone: true,\r\n                // };\r\n    \r\n            case ADD_POST_FAILURE:\r\n                draft.addPostLoading = false;\r\n                draft.addPostError = action.error;\r\n                break;\r\n                // return {\r\n                //     ...state,\r\n                //     addPostLoading: false,\r\n                //     addPostError: action.error,\r\n                // }\r\n            case REMOVE_POST_REQUEST:\r\n                draft.removePostLoading = true;\r\n                draft.removePostDone = false;\r\n                draft.removePostError = null;\r\n                break;\r\n                // return {\r\n                //     ...state,\r\n                //     removePostLoading: true,\r\n                //     removePostDone: false,\r\n                //     removePostError: null,\r\n                // }\r\n            case REMOVE_POST_SUCCESS:\r\n                draft.removePostLoading = false;\r\n                draft.removePostDone = true;\r\n                draft.mainPosts = draft.mainPosts.filter((v) => v.id !== action.data.PostId);\r\n                break;\r\n                // return {\r\n                //     ...state,\r\n                //     mainPosts: state.mainPosts.filter((v) => v.id !== action.data),\r\n                //     removePostLoading: false,\r\n                //     removePostDone: true,\r\n                // };\r\n    \r\n            case REMOVE_POST_FAILURE:\r\n                draft.removePostLoading = false;\r\n                draft.removePostError = action.error;\r\n                break;\r\n                // return {\r\n                //     ...state,\r\n                //     removePostLoading: false,\r\n                //     removePostError: action.error,\r\n                // }\r\n            case ADD_COMMENT_REQUEST:\r\n                draft.addCommentLoading = true;\r\n                draft.addCommentDone = false;\r\n                draft.addCommentError = null;\r\n                break;\r\n                // return {\r\n                //     ...state,\r\n                //     addCommentLoading: true,\r\n                //     addCommentDone: false,\r\n                //     addCommentError: null,\r\n                // }\r\n            case ADD_COMMENT_SUCCESS: {\r\n                const post = draft.mainPosts.find((v) => v.id === action.data.PostId);\r\n                post.Comments.unshift(action.data);\r\n                draft.addCommentLoading = false;\r\n                draft.addCommentDone = true;\r\n                break;\r\n                // const postIndex = state.mainPosts.findIndex((v) => v.id === action.data.postId);\r\n                // const post = { ...state.mainPosts[postIndex] };\r\n                // post.Comments = [dummyComment(action.data.content), ...post.Comments];\r\n                // const mainPosts = [...state.mainPosts];\r\n                // mainPosts[postIndex] = post;\r\n                // return {\r\n                //     ...state,\r\n                //     mainPosts,\r\n                //     addCommentLoading: false,\r\n                //     addCommentDone: true,\r\n                // };            \r\n            }\r\n            case ADD_COMMENT_FAILURE:\r\n                draft.addCommentLoading = false;\r\n                draft.addCommentError = action.error;\r\n                break;\r\n                // return {\r\n                //     ...state,\r\n                //     addCommentLoading: false,\r\n                //     addCommentError: action.error,\r\n                // }\r\n            default:\r\n                break;\r\n        }\r\n    });\r\n\r\n\r\n    \r\n};\r\n\r\nexport default reducer;","module.exports = require(\"next-redux-saga\");","module.exports = require(\"redux\");","module.exports = require(\"prop-types\");","module.exports = require(\"redux-devtools-extension\");","module.exports = require(\"next/head\");","module.exports = require(\"axios\");"],"sourceRoot":""}