{"version":3,"sources":["webpack://_N_E/./pages/post/.js","webpack://_N_E/./node_modules/next/dist/build/webpack/loaders/next-client-pages-loader.js?22c1"],"names":["Post","id","useRouter","query","singlePost","useSelector","state","post","Head","User","nickname","name","content","property","Images","src","window","__NEXT_P","push"],"mappings":"0PAwDeA,UA3CF,WACT,IACQC,EADOC,sBACOC,MAAdF,GACAG,EAAeC,aAAY,SAACC,GAAD,OAAWA,EAAMC,QAA5CH,WAER,OACI,EAAC,IAAD,KACI,EAACI,KAAD,KACI,eACKJ,EAAWK,KAAKC,SADrB,QAIA,UAAMC,KAAK,cAAcC,QAASR,EAAWQ,UAC7C,UAAMC,SAAS,WAAWD,QAAO,UAAKR,EAAWK,KAAKC,SAArB,qCACjC,UAAMG,SAAS,iBAAiBD,QAASR,EAAWQ,UACpD,UAAMC,SAAS,WAAWD,QAASR,EAAWU,OAAO,GAAKV,EAAWU,OAAO,GAAGC,IAAM,qCACrF,UAAMF,SAAS,SAASD,QAAO,oCAA+BX,MAElE,EAAC,IAAD,CAAUM,KAAMH,O,sBC9BvBY,OAAOC,SAAWD,OAAOC,UAAY,IAAIC,KAAK,CAC7C,aACA,WACE,OAAO,EAAQ,a","file":"static/chunks/pages/post/[id]-9bfa06afbcc39a5202a8.js","sourcesContent":["// post/[id].js\r\nimport React from 'react';\r\nimport { END } from '@redux-saga/core';\r\nimport axios from 'axios';\r\nimport { useSelector } from 'react-redux';\r\n\r\nimport { useRouter } from 'next/router';\r\nimport AppLayout from '../../components/AppLayout';\r\nimport PostCard from '../../components/PostCard';\r\nimport { LOAD_POSTS_REQUEST } from '../../reducers/post';\r\nimport { LOAD_MY_INFO_REQUEST } from '../../reducers/user';\r\nimport wrapper from '../../store/configureStore';\r\n\r\nconst Post = () => {\r\n    const router = useRouter();\r\n    const { id } = router.query;\r\n    const { singlePost } = useSelector((state) => state.post);\r\n\r\n    return (\r\n        <AppLayout>\r\n            <Head>\r\n                <title>\r\n                    {singlePost.User.nickname}\r\n                    post\r\n                </title>\r\n                <meta name=\"description\" content={singlePost.content} />\r\n                <meta property=\"og:title\" content={`${singlePost.User.nickname}님의 게시글`} />\r\n                <meta property=\"og:description\" content={singlePost.content} />\r\n                <meta property=\"og:image\" content={singlePost.Images[0] ? singlePost.Images[0].src : 'https://nodebird.com/favicon.ico'} />\r\n                <meta property=\"og:url\" content={`https://nodebird.com/post/${id}`} />\r\n            </Head>\r\n            <PostCard post={singlePost} />\r\n        </AppLayout>\r\n    );\r\n};\r\n\r\nexport const getServerSideProps = wrapper.getServerSideProps(async (context ) => {\r\n    console.log('getServerSideProps start');\r\n    const cookie = context.req ? context.req.headers.cookie : '';\r\n    axios.defaults.headers.Cookie = '';       \r\n    //서버에서 쿠키가 공유가 되기때문에 로그인이 공유되는 문제가 발생하기때문에 이런식으로 쿠키를 지웠다가 채운다.\r\n    if (context.req && cookie) {\r\n        axios.defaults.headers.Cookie = cookie;        \r\n    }\r\n    context.store.dispatch({\r\n        type: LOAD_MY_INFO_REQUEST,\r\n    });\r\n    context.store.dispatch({\r\n        type: LOAD_POSTS_REQUEST,\r\n        data: context.params.id,\r\n    });\r\n    context.store.dispatch(END);\r\n    console.log('getServerSideProps end');\r\n    await context.store.sagaTask.toPromise();\r\n});\r\n\r\nexport default Post;","\n    (window.__NEXT_P = window.__NEXT_P || []).push([\n      \"/post/[id]\",\n      function () {\n        return require(\"private-next-pages/post/[id].js\");\n      }\n    ]);\n  "],"sourceRoot":""}