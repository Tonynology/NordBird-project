{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\Tony\\\\Documents\\\\GitHub\\\\nordbird\\\\front\\\\pages\\\\index.js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\n// because of next.js, don't need to import.\n// but the folder should be 'pages' because next recognize 'pages' folder and change the files into each page\nimport React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport AppLayout from \"../components/AppLayout\";\nimport PostForm from '../components/PostForm';\nimport PostCard from '../components/PostCard';\nimport { LOAD_POSTS_REQUEST } from '../reducers/post';\n\nvar Home = function Home() {\n  _s();\n\n  var dispatch = useDispatch();\n\n  var _useSelector = useSelector(function (state) {\n    return state.user;\n  }),\n      me = _useSelector.me; //구조분해.\n\n\n  var _useSelector2 = useSelector(function (state) {\n    return state.post;\n  }),\n      mainPosts = _useSelector2.mainPosts,\n      hasMorePost = _useSelector2.hasMorePost;\n\n  useEffect(function () {\n    dispatch({\n      type: LOAD_POSTS_REQUEST\n    });\n  }, []);\n  useEffect(function () {\n    function onScroll() {\n      console.log(window.scrollY, document.documentElement.clientHeight, document.documentElement.scrollHeight);\n\n      if (windoe.scrollY + document.documentElement.clientHeight === document.documentElement.scrollHeight - 300) {\n        if (hasMorePost) {\n          dispatch({\n            type: LOAD_POSTS_REQUEST\n          });\n        }\n      }\n    }\n\n    window.addEventListener('scroll', onScroll);\n    return function () {\n      window.removeEventListener('scroll', onScroll); //useEffect에서 window eventlister를 사용하면 remove를 해줘야한다. 안그러면 메모리에 쌓임.\n    };\n  }, [hasMorePost]);\n  return __jsx(AppLayout, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }\n  }, me && __jsx(PostForm, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 20\n    }\n  }), mainPosts.map(function (post) {\n    return __jsx(PostCard, {\n      key: post.id,\n      post: post,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 38\n      }\n    });\n  }));\n};\n\n_s(Home, \"t5W3f13kdHJN+C4GYAtNP8Viywk=\", false, function () {\n  return [useDispatch, useSelector, useSelector];\n});\n\n_c = Home;\nexport default Home;\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"sources":["C:/Users/Tony/Documents/GitHub/nordbird/front/pages/index.js"],"names":["React","useEffect","useDispatch","useSelector","AppLayout","PostForm","PostCard","LOAD_POSTS_REQUEST","Home","dispatch","state","user","me","post","mainPosts","hasMorePost","type","onScroll","console","log","window","scrollY","document","documentElement","clientHeight","scrollHeight","windoe","addEventListener","removeEventListener","map","id"],"mappings":";;;;;AAAA;AACA;AAEA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,OAAOC,QAAP,MAAqB,wBAArB;AACA,OAAOC,QAAP,MAAqB,wBAArB;AACA,SAASC,kBAAT,QAAmC,kBAAnC;;AAGA,IAAMC,IAAI,GAAG,SAAPA,IAAO,GAAM;AAAA;;AACf,MAAMC,QAAQ,GAAGP,WAAW,EAA5B;;AADe,qBAEAC,WAAW,CAAC,UAACO,KAAD;AAAA,WAAWA,KAAK,CAACC,IAAjB;AAAA,GAAD,CAFX;AAAA,MAEPC,EAFO,gBAEPA,EAFO,EAEyC;;;AAFzC,sBAGoBT,WAAW,CAAC,UAACO,KAAD;AAAA,WAAWA,KAAK,CAACG,IAAjB;AAAA,GAAD,CAH/B;AAAA,MAGPC,SAHO,iBAGPA,SAHO;AAAA,MAGIC,WAHJ,iBAGIA,WAHJ;;AAKfd,EAAAA,SAAS,CAAC,YAAM;AACZQ,IAAAA,QAAQ,CAAC;AACLO,MAAAA,IAAI,EAAET;AADD,KAAD,CAAR;AAGH,GAJQ,EAIN,EAJM,CAAT;AAMAN,EAAAA,SAAS,CAAC,YAAM;AACZ,aAASgB,QAAT,GAAoB;AAChBC,MAAAA,OAAO,CAACC,GAAR,CAAYC,MAAM,CAACC,OAAnB,EAA4BC,QAAQ,CAACC,eAAT,CAAyBC,YAArD,EAAmEF,QAAQ,CAACC,eAAT,CAAyBE,YAA5F;;AACA,UAAIC,MAAM,CAACL,OAAP,GAAiBC,QAAQ,CAACC,eAAT,CAAyBC,YAA1C,KAA2DF,QAAQ,CAACC,eAAT,CAAyBE,YAAzB,GAAwC,GAAvG,EAA4G;AACxG,YAAIV,WAAJ,EAAiB;AACbN,UAAAA,QAAQ,CAAC;AACLO,YAAAA,IAAI,EAAET;AADD,WAAD,CAAR;AAGH;AACJ;AACJ;;AACDa,IAAAA,MAAM,CAACO,gBAAP,CAAwB,QAAxB,EAAkCV,QAAlC;AACA,WAAO,YAAM;AACTG,MAAAA,MAAM,CAACQ,mBAAP,CAA2B,QAA3B,EAAqCX,QAArC,EADS,CACuC;AACnD,KAFD;AAGH,GAfQ,EAeN,CAACF,WAAD,CAfM,CAAT;AAkBA,SACI,MAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKH,EAAE,IAAI,MAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADX,EAEKE,SAAS,CAACe,GAAV,CAAc,UAAChB,IAAD;AAAA,WAAU,MAAC,QAAD;AAAU,MAAA,GAAG,EAAEA,IAAI,CAACiB,EAApB;AAAwB,MAAA,IAAI,EAAEjB,IAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAV;AAAA,GAAd,CAFL,CADJ;AAMH,CAnCD;;GAAML,I;UACeN,W,EACFC,W,EACoBA,W;;;KAHjCK,I;AAqCN,eAAeA,IAAf","sourcesContent":["// because of next.js, don't need to import.\r\n// but the folder should be 'pages' because next recognize 'pages' folder and change the files into each page\r\n\r\nimport React, { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport AppLayout from \"../components/AppLayout\";\r\nimport PostForm from '../components/PostForm';\r\nimport PostCard from '../components/PostCard';\r\nimport { LOAD_POSTS_REQUEST } from '../reducers/post';\r\n\r\n\r\nconst Home = () => {\r\n    const dispatch = useDispatch();    \r\n    const { me } = useSelector((state) => state.user);      //구조분해.\r\n    const { mainPosts, hasMorePost } = useSelector((state) => state.post);\r\n\r\n    useEffect(() => {\r\n        dispatch({\r\n            type: LOAD_POSTS_REQUEST,\r\n        });\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        function onScroll() {\r\n            console.log(window.scrollY, document.documentElement.clientHeight, document.documentElement.scrollHeight);\r\n            if (windoe.scrollY + document.documentElement.clientHeight === document.documentElement.scrollHeight - 300) {\r\n                if (hasMorePost) {\r\n                    dispatch({\r\n                        type: LOAD_POSTS_REQUEST,\r\n                    });\r\n                }                \r\n            }\r\n        }\r\n        window.addEventListener('scroll', onScroll);\r\n        return () => {\r\n            window.removeEventListener('scroll', onScroll); //useEffect에서 window eventlister를 사용하면 remove를 해줘야한다. 안그러면 메모리에 쌓임.\r\n        };\r\n    }, [hasMorePost]);\r\n\r\n\r\n    return (\r\n        <AppLayout>\r\n            {me && <PostForm />}\r\n            {mainPosts.map((post) => <PostCard key={post.id} post={post} />)}\r\n        </AppLayout>\r\n    );\r\n}\r\n\r\nexport default Home;"]},"metadata":{},"sourceType":"module"}