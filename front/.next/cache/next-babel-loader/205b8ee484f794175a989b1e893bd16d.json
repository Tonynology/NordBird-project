{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { useCallback, useEffect, useState } from 'react';\nimport Head from 'next/head';\nimport { Form, Input, Checkbox, Button } from 'antd';\nimport styled from 'styled-components';\nimport axios from 'axios';\nimport { END } from 'redux-saga';\nimport AppLayout from \"../components/AppLayout\";\nimport useInput from '../hooks/useInput';\nimport { SIGN_UP_REQUEST } from '../reducers/user';\nimport { useSelector, useDispatch } from 'react-redux';\nimport Router from 'next/router';\nimport wrapper from '../store/configureStore';\nconst ErrorMessage = styled.div.withConfig({\n  displayName: \"signup__ErrorMessage\",\n  componentId: \"m23i71-0\"\n})([\"color:red;\"]);\n\nconst Signup = () => {\n  const dispatch = useDispatch();\n  const {\n    signUpLoading,\n    signUpDone,\n    signUpError,\n    me\n  } = useSelector(state => state.user);\n  useEffect(() => {\n    if (me && me.id) {\n      Router.replace('/');\n    }\n  }, [me && me.id]);\n  useEffect(() => {\n    if (signUpDone) {\n      Router.replace('/');\n    }\n  }, [signUpDone]);\n  useEffect(() => {\n    if (signUpError) {\n      alert(signUpError);\n    }\n  }, [signUpError]);\n  const [email, onChangeEmail] = useInput('');\n  const [nickname, onChangeNickname] = useInput('');\n  const [password, onChangePassword] = useInput('');\n  const {\n    0: passwordCheck,\n    1: setPasswordCheck\n  } = useState('');\n  const {\n    0: passwordError,\n    1: setPasswordError\n  } = useState(false);\n  const onChangePasswordCheck = useCallback(e => {\n    setPasswordCheck(e.target.value);\n    setPasswordError(e.target.value !== password);\n  }, [password]);\n  const {\n    0: term,\n    1: setTerm\n  } = useState('');\n  const {\n    0: termError,\n    1: setTermError\n  } = useState(false);\n  const onChangeTerm = useCallback(e => {\n    setTerm(e.target.checked);\n    setTermError(false);\n  }, []);\n  const onSubmit = useCallback(() => {\n    if (password !== passwordCheck) {\n      return setPasswordError(true);\n    }\n\n    if (!term) {\n      return setTermError(true);\n    }\n\n    console.log(email, nickname, password);\n    dispatch({\n      type: SIGN_UP_REQUEST,\n      data: {\n        email,\n        password,\n        nickname\n      }\n    });\n  }, [email, password, passwordCheck, term]);\n  return __jsx(AppLayout, null, __jsx(Head, null, __jsx(\"title\", null, \"Sign up| NodeBird\")), __jsx(Form, {\n    onFinish: onSubmit\n  }, __jsx(\"div\", null, __jsx(\"label\", {\n    htmlFor: \"user-email\"\n  }, \"Email\"), __jsx(\"br\", null), __jsx(Input, {\n    name: \"user-email\",\n    type: \"email\",\n    value: email,\n    onChange: onChangeEmail,\n    required: true\n  })), __jsx(\"div\", null, __jsx(\"label\", {\n    htmlFor: \"user-nick\"\n  }, \"Nickname\"), __jsx(\"br\", null), __jsx(Input, {\n    name: \"user-nick\",\n    value: nickname,\n    onChange: onChangeNickname,\n    required: true\n  })), __jsx(\"div\", null, __jsx(\"label\", {\n    htmlFor: \"user-password\"\n  }, \"Password\"), __jsx(\"br\", null), __jsx(Input, {\n    name: \"user-password\",\n    value: password,\n    onChange: onChangePassword,\n    required: true\n  })), __jsx(\"div\", null, __jsx(\"label\", {\n    htmlFor: \"user-password-check\"\n  }, \"password\"), __jsx(\"br\", null), __jsx(Input, {\n    name: \"user-password-check\",\n    type: \"password\",\n    value: passwordCheck,\n    onChange: onChangePasswordCheck,\n    required: true\n  }), passwordError && __jsx(ErrorMessage, null, \"password is not matched\")), __jsx(\"div\", null, __jsx(Checkbox, {\n    name: \"user-term\",\n    checked: term,\n    onChange: onChangeTerm\n  }, \"Agree?\"), termError && __jsx(ErrorMessage, null, \"Please Agree\")), __jsx(\"div\", {\n    style: {\n      marginTop: 10\n    }\n  }, __jsx(Button, {\n    type: \"primary\",\n    htmlType: \"submit\",\n    loading: signUpLoading\n  }, \"SIGN UP\"))));\n};\n\nexport const getServerSideProps = wrapper.getServerSideProps(async context => {\n  console.log('getServerSideProps start');\n  const cookie = context.req ? context.req.headers.cookie : '';\n  axios.defaults.headers.Cookie = ''; //서버에서 쿠키가 공유가 되기때문에 로그인이 공유되는 문제가 발생하기때문에 이런식으로 쿠키를 지웠다가 채운다.\n\n  if (context.req && cookie) {\n    axios.defaults.headers.Cookie = cookie;\n  }\n\n  context.store.dispatch({\n    type: LOAD_MY_INFO_REQUEST\n  });\n  context.store.dispatch(END);\n  console.log('getServerSideProps end');\n  await context.store.sagaTask.toPromise();\n});\nexport default Signup;","map":{"version":3,"sources":["C:/Users/Tony/Documents/GitHub/nordbird/front/pages/signup.js"],"names":["React","useCallback","useEffect","useState","Head","Form","Input","Checkbox","Button","styled","axios","END","AppLayout","useInput","SIGN_UP_REQUEST","useSelector","useDispatch","Router","wrapper","ErrorMessage","div","Signup","dispatch","signUpLoading","signUpDone","signUpError","me","state","user","id","replace","alert","email","onChangeEmail","nickname","onChangeNickname","password","onChangePassword","passwordCheck","setPasswordCheck","passwordError","setPasswordError","onChangePasswordCheck","e","target","value","term","setTerm","termError","setTermError","onChangeTerm","checked","onSubmit","console","log","type","data","marginTop","getServerSideProps","context","cookie","req","headers","defaults","Cookie","store","LOAD_MY_INFO_REQUEST","sagaTask","toPromise"],"mappings":"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","sourcesContent":["import React, { useCallback, useEffect, useState } from 'react';\r\nimport Head from 'next/head';\r\nimport { Form, Input, Checkbox, Button } from 'antd';\r\nimport styled from 'styled-components';\r\nimport axios from 'axios';\r\nimport { END } from 'redux-saga';\r\n\r\nimport AppLayout from \"../components/AppLayout\";\r\nimport useInput from '../hooks/useInput';\r\nimport { SIGN_UP_REQUEST } from '../reducers/user';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport Router from 'next/router';\r\nimport wrapper from '../store/configureStore';\r\n\r\nconst ErrorMessage = styled.div`\r\n    color: red;\r\n`\r\n\r\nconst Signup = () => {\r\n    const dispatch = useDispatch();\r\n    const { signUpLoading, signUpDone, signUpError, me } = useSelector((state) => state.user);\r\n\r\n    useEffect(() => {\r\n        if (me && me.id) {\r\n            Router.replace('/');\r\n        }\r\n    }, [me && me.id]);\r\n\r\n    useEffect(() => {\r\n        if (signUpDone) {\r\n            Router.replace('/');\r\n        }\r\n    }, [signUpDone]);\r\n\r\n    useEffect(() => {\r\n        if (signUpError) {\r\n            alert(signUpError);\r\n        }\r\n    }, [signUpError]);\r\n\r\n    const [email, onChangeEmail] = useInput('');\r\n    const [nickname, onChangeNickname] = useInput('');\r\n    const [password, onChangePassword] = useInput('');\r\n\r\n    const [passwordCheck, setPasswordCheck] = useState('');\r\n    const [passwordError, setPasswordError] = useState(false);\r\n    const onChangePasswordCheck = useCallback((e) => {\r\n        setPasswordCheck(e.target.value);\r\n        setPasswordError(e.target.value !== password);\r\n    }, [password]);\r\n    \r\n    const [term, setTerm] = useState('');\r\n    const [termError, setTermError] = useState(false);\r\n    const onChangeTerm = useCallback((e) => {\r\n        setTerm(e.target.checked);\r\n        setTermError(false);\r\n    }, []);\r\n\r\n    const onSubmit = useCallback(() => {\r\n        if (password !== passwordCheck) {\r\n            return setPasswordError(true);\r\n        }\r\n        if (!term) {\r\n            return setTermError(true)\r\n        }\r\n        console.log(email, nickname, password);\r\n        dispatch({\r\n            type: SIGN_UP_REQUEST,\r\n            data: { email, password, nickname },\r\n        })\r\n    }, [email, password, passwordCheck, term]);\r\n\r\n    return (\r\n        <AppLayout>\r\n            <Head>\r\n                <title>Sign up| NodeBird</title>\r\n            </Head>\r\n            <Form onFinish={onSubmit}>\r\n                <div>\r\n                    <label htmlFor=\"user-email\">Email</label>\r\n                    <br/>\r\n                    <Input name=\"user-email\" type=\"email\" value={email} onChange={onChangeEmail} required />\r\n                </div>\r\n                <div>\r\n                    <label htmlFor=\"user-nick\">Nickname</label>\r\n                    <br/>\r\n                    <Input name=\"user-nick\" value={nickname} onChange={onChangeNickname} required />\r\n                </div>\r\n                <div>\r\n                    <label htmlFor=\"user-password\">Password</label>\r\n                    <br/>\r\n                    <Input name=\"user-password\" value={password} onChange={onChangePassword} required />\r\n                </div>\r\n                <div>\r\n                    <label htmlFor=\"user-password-check\">password</label>\r\n                    <br/>\r\n                    <Input \r\n                        name=\"user-password-check\" \r\n                        type=\"password\" \r\n                        value={passwordCheck} \r\n                        onChange={onChangePasswordCheck} \r\n                        required \r\n                    />\r\n                    {passwordError && <ErrorMessage>password is not matched</ErrorMessage>}\r\n                </div>\r\n                <div>\r\n                    <Checkbox name=\"user-term\" checked={term} onChange={onChangeTerm}>Agree?</Checkbox>\r\n                    {termError && <ErrorMessage>Please Agree</ErrorMessage>}\r\n                </div>\r\n                <div style={{ marginTop: 10 }}>\r\n                    <Button type=\"primary\" htmlType=\"submit\" loading={signUpLoading}>SIGN UP</Button>\r\n                </div>\r\n            </Form>     \r\n        </AppLayout>\r\n    );\r\n};\r\n\r\nexport const getServerSideProps = wrapper.getServerSideProps(async (context ) => {\r\n    console.log('getServerSideProps start');\r\n    const cookie = context.req ? context.req.headers.cookie : '';\r\n    axios.defaults.headers.Cookie = '';       \r\n    //서버에서 쿠키가 공유가 되기때문에 로그인이 공유되는 문제가 발생하기때문에 이런식으로 쿠키를 지웠다가 채운다.\r\n    if (context.req && cookie) {\r\n        axios.defaults.headers.Cookie = cookie;        \r\n    }\r\n    context.store.dispatch({\r\n        type: LOAD_MY_INFO_REQUEST,\r\n    });\r\n    context.store.dispatch(END);\r\n    console.log('getServerSideProps end');\r\n    await context.store.sagaTask.toPromise();\r\n});\r\n\r\nexport default Signup;"]},"metadata":{},"sourceType":"module"}