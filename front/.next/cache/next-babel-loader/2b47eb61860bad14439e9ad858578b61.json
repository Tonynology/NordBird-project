{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { useCallback, useState } from 'react';\nimport { PlusOutlined } from '@ant-design/icons';\nimport ImagesZoom from './ImagesZoom';\n\nconst PostImages = ({\n  images\n}) => {\n  const {\n    0: showImageZoom,\n    1: setShowImageZoom\n  } = useState(false);\n  const onZoom = useCallback(() => {\n    //이미지를 확대해서 볼수 있도록. (케루셀)\n    setShowImageZoom(true);\n  }, []); // postcard.js에서 이미지 0일땐 props가 오지 않도록 설정함. \n\n  if (images.length === 1) {\n    return __jsx(\"div\", null, __jsx(\"img\", {\n      role: \"presentation\",\n      src: `http://localhost:3065/${images[0].src}`,\n      alt: images[0].src,\n      onClick: onZoom\n    }), showImageZoom && __jsx(ImagesZoom, {\n      images: images,\n      onClose: onClise\n    }));\n  }\n\n  if (images.length === 2) {\n    return __jsx(\"div\", null, __jsx(\"img\", {\n      role: \"presentation\",\n      src: `http://localhost:3065/${images[0].src}`,\n      alt: images[0].src,\n      width: \"50%\",\n      onClick: onZoom\n    }), __jsx(\"img\", {\n      role: \"presentation\",\n      src: `http://localhost:3065/${images[0].src}`,\n      alt: images[1].src,\n      width: \"50%\",\n      onClick: onZoom\n    }), showImageZoom && __jsx(ImagesZoom, {\n      image: images,\n      onClose: onClise\n    }));\n  }\n\n  return __jsx(\"div\", null, __jsx(\"div\", null, __jsx(\"img\", {\n    role: \"presentation\",\n    width: \"50%\",\n    src: images[0].src,\n    alt: images[0].src,\n    onClick: onZoom\n  }), __jsx(\"div\", {\n    role: \"presentation\",\n    src: `http://localhost:3065/${images[0].src}`,\n    style: {\n      display: 'inline-block',\n      width: '50%',\n      textAlign: 'center',\n      verticalAlign: 'middle'\n    },\n    onClick: onZoom\n  }, __jsx(PlusOutlined, null), __jsx(\"br\", null), images.length - 1, \"show personal image\")), showImageZoom && __jsx(ImagesZoom, {\n    images: images,\n    onClose: onClose\n  }));\n};\n\nexport default PostImages;","map":{"version":3,"sources":["C:/Users/Tony/Documents/GitHub/nordbird/front/components/PostImages.js"],"names":["React","useCallback","useState","PlusOutlined","ImagesZoom","PostImages","images","showImageZoom","setShowImageZoom","onZoom","length","src","onClise","display","width","textAlign","verticalAlign","onClose"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,WAAhB,EAA6BC,QAA7B,QAA6C,OAA7C;AAEA,SAASC,YAAT,QAA6B,mBAA7B;AAEA,OAAOC,UAAP,MAAuB,cAAvB;;AAEA,MAAMC,UAAU,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAgB;AAC/B,QAAM;AAAA,OAACC,aAAD;AAAA,OAAgBC;AAAhB,MAAoCN,QAAQ,CAAC,KAAD,CAAlD;AAEA,QAAMO,MAAM,GAAGR,WAAW,CAAC,MAAM;AAAG;AAChCO,IAAAA,gBAAgB,CAAC,IAAD,CAAhB;AACH,GAFyB,EAEvB,EAFuB,CAA1B,CAH+B,CAM/B;;AACA,MAAIF,MAAM,CAACI,MAAP,KAAkB,CAAtB,EAAyB;AACrB,WACI,mBAEI;AAAK,MAAA,IAAI,EAAC,cAAV;AAAyB,MAAA,GAAG,EAAG,yBAAwBJ,MAAM,CAAC,CAAD,CAAN,CAAUK,GAAI,EAArE;AAAwE,MAAA,GAAG,EAAEL,MAAM,CAAC,CAAD,CAAN,CAAUK,GAAvF;AAA4F,MAAA,OAAO,EAAEF;AAArG,MAFJ,EAGKF,aAAa,IAAI,MAAC,UAAD;AAAY,MAAA,MAAM,EAAED,MAApB;AAA4B,MAAA,OAAO,EAAEM;AAArC,MAHtB,CADJ;AAOH;;AACD,MAAIN,MAAM,CAACI,MAAP,KAAkB,CAAtB,EAAyB;AACrB,WACI,mBAEI;AAAK,MAAA,IAAI,EAAC,cAAV;AAAyB,MAAA,GAAG,EAAG,yBAAwBJ,MAAM,CAAC,CAAD,CAAN,CAAUK,GAAI,EAArE;AAAwE,MAAA,GAAG,EAAEL,MAAM,CAAC,CAAD,CAAN,CAAUK,GAAvF;AAA4F,MAAA,KAAK,EAAC,KAAlG;AAAwG,MAAA,OAAO,EAAEF;AAAjH,MAFJ,EAGI;AAAK,MAAA,IAAI,EAAC,cAAV;AAAyB,MAAA,GAAG,EAAG,yBAAwBH,MAAM,CAAC,CAAD,CAAN,CAAUK,GAAI,EAArE;AAAwE,MAAA,GAAG,EAAEL,MAAM,CAAC,CAAD,CAAN,CAAUK,GAAvF;AAA4F,MAAA,KAAK,EAAC,KAAlG;AAAwG,MAAA,OAAO,EAAEF;AAAjH,MAHJ,EAIKF,aAAa,IAAI,MAAC,UAAD;AAAY,MAAA,KAAK,EAAED,MAAnB;AAA2B,MAAA,OAAO,EAAEM;AAApC,MAJtB,CADJ;AAQH;;AACD,SACI,mBACI,mBACI;AAAK,IAAA,IAAI,EAAC,cAAV;AAAyB,IAAA,KAAK,EAAC,KAA/B;AAAqC,IAAA,GAAG,EAAEN,MAAM,CAAC,CAAD,CAAN,CAAUK,GAApD;AAAyD,IAAA,GAAG,EAAEL,MAAM,CAAC,CAAD,CAAN,CAAUK,GAAxE;AAA6E,IAAA,OAAO,EAAEF;AAAtF,IADJ,EAEI;AACI,IAAA,IAAI,EAAC,cADT;AAEI,IAAA,GAAG,EAAG,yBAAwBH,MAAM,CAAC,CAAD,CAAN,CAAUK,GAAI,EAFhD;AAGI,IAAA,KAAK,EAAE;AAAEE,MAAAA,OAAO,EAAE,cAAX;AAA2BC,MAAAA,KAAK,EAAE,KAAlC;AAAyCC,MAAAA,SAAS,EAAC,QAAnD;AAA6DC,MAAAA,aAAa,EAAC;AAA3E,KAHX;AAII,IAAA,OAAO,EAAEP;AAJb,KAMI,MAAC,YAAD,OANJ,EAOI,iBAPJ,EAQKH,MAAM,CAACI,MAAP,GAAgB,CARrB,wBAFJ,CADJ,EAeKH,aAAa,IAAI,MAAC,UAAD;AAAY,IAAA,MAAM,EAAED,MAApB;AAA4B,IAAA,OAAO,EAAEW;AAArC,IAftB,CADJ;AAmBH,CA7CD;;AAmDA,eAAeZ,UAAf","sourcesContent":["import React, { useCallback, useState } from 'react';\r\nimport propTypes from 'prop-types';\r\nimport { PlusOutlined } from '@ant-design/icons';\r\n\r\nimport ImagesZoom from './ImagesZoom';\r\n\r\nconst PostImages = ({ images }) => {\r\n    const [showImageZoom, setShowImageZoom] = useState(false);\r\n\r\n    const onZoom = useCallback(() => {  //이미지를 확대해서 볼수 있도록. (케루셀)\r\n        setShowImageZoom(true);\r\n    }, []);\r\n    // postcard.js에서 이미지 0일땐 props가 오지 않도록 설정함. \r\n    if (images.length === 1) {\r\n        return (\r\n            <div>\r\n                {/* //role=\"presentation\" 는 이미지 reader한테 누를 필요 없는 기능들을 알려줌. */}\r\n                <img role=\"presentation\" src={`http://localhost:3065/${images[0].src}`} alt={images[0].src} onClick={onZoom} /> \r\n                {showImageZoom && <ImagesZoom images={images} onClose={onClise} />}\r\n            </div>\r\n        );\r\n    }\r\n    if (images.length === 2) {\r\n        return (\r\n            <div>\r\n                {/* //role=\"presentation\" 는 이미지 reader한테 누를 필요 없는 기능들을 알려줌.  각 이미지 width를 절반씩.*/}\r\n                <img role=\"presentation\" src={`http://localhost:3065/${images[0].src}`} alt={images[0].src} width=\"50%\" onClick={onZoom} />\r\n                <img role=\"presentation\" src={`http://localhost:3065/${images[0].src}`} alt={images[1].src} width=\"50%\" onClick={onZoom} />\r\n                {showImageZoom && <ImagesZoom image={images} onClose={onClise} />}\r\n            </div>\r\n        );\r\n    }\r\n    return (\r\n        <div>\r\n            <div>\r\n                <img role=\"presentation\" width=\"50%\" src={images[0].src} alt={images[0].src} onClick={onZoom} /> \r\n                <div\r\n                    role=\"presentation\"\r\n                    src={`http://localhost:3065/${images[0].src}`}\r\n                    style={{ display: 'inline-block', width: '50%', textAlign:'center', verticalAlign:'middle'}}\r\n                    onClick={onZoom}\r\n                >\r\n                    <PlusOutlined />\r\n                    <br />\r\n                    {images.length - 1}\r\n                    show personal image\r\n                </div>\r\n            </div>\r\n            {showImageZoom && <ImagesZoom images={images} onClose={onClose} />}\r\n        </div>\r\n    )\r\n};\r\n\r\nPostImages.propTypes = {\r\n    images: propTypes.arrayOf(propTypes.object),\r\n}\r\n\r\nexport default PostImages;"]},"metadata":{},"sourceType":"module"}