{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _taggedTemplateLiteral from \"@babel/runtime/helpers/esm/taggedTemplateLiteral\";\n\nvar _templateObject;\n\nvar __jsx = React.createElement;\nimport React, { useState, useCallback } from 'react';\nimport PropType from 'prop-types';\nimport Link from 'next/link';\nimport { Menu, Input, Row, Col } from 'antd';\nimport styled from 'styled-components';\nimport { useSelector } from 'react-redux';\nimport { createGlobalStyle } from 'styled-components';\nimport Router from 'next/router';\nimport UserProfile from '../components/UserProfile';\nimport LoginForm from '../components/LoginForm';\nimport useInput from '../hooks/useInput'; //fixed git config\n\nvar SearchInput = styled(Input.Search).withConfig({\n  displayName: \"AppLayout__SearchInput\",\n  componentId: \"ojh99p-0\"\n})([\"vertical-align:middle;\"]);\nvar Global = createGlobalStyle(_templateObject || (_templateObject = _taggedTemplateLiteral([\"\\n    .ant-row {\\n        margin-right: 0 !important;\\n        margin-left: 0 !important;\\n    }\\n    \\n    .ant-col:first-child {\\n        padding-left: 0 !important;\\n    }\\n    \\n    .ant-col:last-child {\\n        padding-right: 0 !important;\\n    }\\n\"])));\n\nvar AppLayout = function AppLayout(_ref) {\n  var children = _ref.children;\n\n  // const [isLoggedIn, setIsLoggedIn] = useState(false); ///dummy data for login without server\n  // redux/reducers 의 중앙관리 덕에 더이상 필요하지 않음.\n  var _useInput = useInput(''),\n      _useInput2 = _slicedToArray(_useInput, 2),\n      searchInput = _useInput2[0],\n      onChangeSearchInput = _useInput2[1];\n\n  var _useSelector = useSelector(function (state) {\n    return state.user;\n  }),\n      me = _useSelector.me; //useSelector는 npm i react-redux 필요\n  //  == const { isLoggedIn } = useSelector((state) => state.user);  구조분해 할당.\n\n\n  var onSearch = useCallback(function () {\n    Router.push(\"/hashtag/\".concat(searchInput));\n  }, [searchInput]);\n  return __jsx(\"div\", null, __jsx(Global, null), __jsx(Menu, {\n    mode: \"horizontal\"\n  }, __jsx(Menu.Item, null, __jsx(Link, {\n    href: \"/\"\n  }, __jsx(\"a\", null, \"NodeBird\"))), __jsx(Menu.Item, null, __jsx(Link, {\n    href: \"/profile\"\n  }, __jsx(\"a\", null, \"Profile\"))), __jsx(Menu.Item, null, __jsx(Link, {\n    href: \"/signup\"\n  }, __jsx(\"a\", null, \"Signup\"))), __jsx(Menu.Item, null, __jsx(SearchInput, {\n    enterButton: true,\n    value: searchInput,\n    onChange: onChangeSearchInput,\n    onSearch: onSearch\n  }))), __jsx(Row, {\n    gutter: 8\n  }, __jsx(Col, {\n    xs: 24,\n    md: 6\n  }, me ? __jsx(UserProfile, null) : __jsx(LoginForm, null)), __jsx(Col, {\n    xs: 24,\n    md: 12\n  }, children), __jsx(Col, {\n    xs: 24,\n    md: 6\n  }, __jsx(\"a\", {\n    href: \"/\",\n    target: \"_blank\",\n    rel: \"noreferrer nooppener\"\n  }, \"Made by Tony Moon\"))));\n};\n\nAppLayout.propType = {\n  children: PropType.node.isRequired\n};\nexport default AppLayout;","map":{"version":3,"sources":["C:/Users/Tony/Documents/GitHub/nordbird/front/components/AppLayout.js"],"names":["React","useState","useCallback","PropType","Link","Menu","Input","Row","Col","styled","useSelector","createGlobalStyle","Router","UserProfile","LoginForm","useInput","SearchInput","Search","Global","AppLayout","children","searchInput","onChangeSearchInput","state","user","me","onSearch","push","propType","node","isRequired"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,WAA1B,QAA6C,OAA7C;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,SAASC,IAAT,EAAeC,KAAf,EAAsBC,GAAtB,EAA2BC,GAA3B,QAAsC,MAAtC;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAASC,iBAAT,QAAkC,mBAAlC;AACA,OAAOC,MAAP,MAAmB,aAAnB;AAEA,OAAOC,WAAP,MAAwB,2BAAxB;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,OAAOC,QAAP,MAAqB,mBAArB,C,CAEA;;AAEA,IAAMC,WAAW,GAAGP,MAAM,CAACH,KAAK,CAACW,MAAP,CAAT;AAAA;AAAA;AAAA,8BAAjB;AAIA,IAAMC,MAAM,GAAGP,iBAAH,mUAAZ;;AAeA,IAAMQ,SAAS,GAAG,SAAZA,SAAY,OAAgB;AAAA,MAAdC,QAAc,QAAdA,QAAc;;AAC9B;AACA;AAF8B,kBAIaL,QAAQ,CAAC,EAAD,CAJrB;AAAA;AAAA,MAIvBM,WAJuB;AAAA,MAIVC,mBAJU;;AAAA,qBAKfZ,WAAW,CAAC,UAACa,KAAD;AAAA,WAAWA,KAAK,CAACC,IAAjB;AAAA,GAAD,CALI;AAAA,MAKtBC,EALsB,gBAKtBA,EALsB,EAK0B;AACxD;;;AAEA,MAAMC,QAAQ,GAAGxB,WAAW,CAAC,YAAM;AAC/BU,IAAAA,MAAM,CAACe,IAAP,oBAAwBN,WAAxB;AACH,GAF2B,EAEzB,CAACA,WAAD,CAFyB,CAA5B;AAIA,SACI,mBACI,MAAC,MAAD,OADJ,EAEI,MAAC,IAAD;AAAM,IAAA,IAAI,EAAC;AAAX,KACI,MAAC,IAAD,CAAM,IAAN,QACI,MAAC,IAAD;AAAM,IAAA,IAAI,EAAC;AAAX,KAAe,4BAAf,CADJ,CADJ,EAII,MAAC,IAAD,CAAM,IAAN,QACI,MAAC,IAAD;AAAM,IAAA,IAAI,EAAC;AAAX,KAAsB,2BAAtB,CADJ,CAJJ,EAOI,MAAC,IAAD,CAAM,IAAN,QACI,MAAC,IAAD;AAAM,IAAA,IAAI,EAAC;AAAX,KAAqB,0BAArB,CADJ,CAPJ,EAUI,MAAC,IAAD,CAAM,IAAN,QACI,MAAC,WAAD;AACC,IAAA,WAAW,MADZ;AAEC,IAAA,KAAK,EAAEA,WAFR;AAGC,IAAA,QAAQ,EAAEC,mBAHX;AAIC,IAAA,QAAQ,EAAEI;AAJX,IADJ,CAVJ,CAFJ,EAqBI,MAAC,GAAD;AAAK,IAAA,MAAM,EAAE;AAAb,KACI,MAAC,GAAD;AAAK,IAAA,EAAE,EAAE,EAAT;AAAa,IAAA,EAAE,EAAE;AAAjB,KAEKD,EAAE,GAAG,MAAC,WAAD,OAAH,GAAqB,MAAC,SAAD,OAF5B,CADJ,EAKI,MAAC,GAAD;AAAK,IAAA,EAAE,EAAE,EAAT;AAAa,IAAA,EAAE,EAAE;AAAjB,KACKL,QADL,CALJ,EAQI,MAAC,GAAD;AAAK,IAAA,EAAE,EAAE,EAAT;AAAa,IAAA,EAAE,EAAE;AAAjB,KACI;AAAG,IAAA,IAAI,EAAC,GAAR;AAAY,IAAA,MAAM,EAAC,QAAnB;AAA4B,IAAA,GAAG,EAAC;AAAhC,yBADJ,CARJ,CArBJ,CADJ;AAoCH,CAhDD;;AAkDAD,SAAS,CAACS,QAAV,GAAqB;AACjBR,EAAAA,QAAQ,EAAEjB,QAAQ,CAAC0B,IAAT,CAAcC;AADP,CAArB;AAIA,eAAeX,SAAf","sourcesContent":["import React, { useState, useCallback } from 'react';\r\nimport PropType from 'prop-types';\r\nimport Link from 'next/link';\r\nimport { Menu, Input, Row, Col } from 'antd';\r\nimport styled from 'styled-components';\r\nimport { useSelector } from 'react-redux';\r\nimport { createGlobalStyle } from 'styled-components';\r\nimport Router from 'next/router';\r\n\r\nimport UserProfile from '../components/UserProfile';\r\nimport LoginForm from '../components/LoginForm';\r\nimport useInput from '../hooks/useInput';\r\n\r\n//fixed git config\r\n\r\nconst SearchInput = styled(Input.Search)`\r\n    vertical-align: middle;\r\n`\r\n\r\nconst Global = createGlobalStyle`\r\n    .ant-row {\r\n        margin-right: 0 !important;\r\n        margin-left: 0 !important;\r\n    }\r\n    \r\n    .ant-col:first-child {\r\n        padding-left: 0 !important;\r\n    }\r\n    \r\n    .ant-col:last-child {\r\n        padding-right: 0 !important;\r\n    }\r\n`;\r\n\r\nconst AppLayout = ({children}) => {\r\n    // const [isLoggedIn, setIsLoggedIn] = useState(false); ///dummy data for login without server\r\n    // redux/reducers 의 중앙관리 덕에 더이상 필요하지 않음.\r\n\r\n    const [searchInput, onChangeSearchInput] = useInput('');\r\n    const { me } = useSelector((state) => state.user);      //useSelector는 npm i react-redux 필요\r\n    //  == const { isLoggedIn } = useSelector((state) => state.user);  구조분해 할당.\r\n\r\n    const onSearch = useCallback(() => {\r\n        Router.push(`/hashtag/${searchInput}`);\r\n    }, [searchInput]);\r\n\r\n    return (\r\n        <div>\r\n            <Global />\r\n            <Menu mode=\"horizontal\">\r\n                <Menu.Item>\r\n                    <Link href=\"/\"><a>NodeBird</a></Link>\r\n                </Menu.Item>    \r\n                <Menu.Item>\r\n                    <Link href=\"/profile\"><a>Profile</a></Link>\r\n                </Menu.Item>\r\n                <Menu.Item>\r\n                    <Link href=\"/signup\"><a>Signup</a></Link>\r\n                </Menu.Item>\r\n                <Menu.Item>\r\n                    <SearchInput \r\n                     enterButton \r\n                     value={searchInput}\r\n                     onChange={onChangeSearchInput}\r\n                     onSearch={onSearch}\r\n                    />\r\n                </Menu.Item>\r\n            </Menu>\r\n            <Row gutter={8}>\r\n                <Col xs={24} md={6}>\r\n                    {/* {isLoggedIn ? <UserProfile setIsLoggedIn={setIsLoggedIn} /> : <LoginForm setIsLoggedIn={setIsLoggedIn}/>} */}\r\n                    {me ? <UserProfile /> : <LoginForm />}\r\n                </Col>\r\n                <Col xs={24} md={12}>\r\n                    {children}\r\n                </Col>\r\n                <Col xs={24} md={6}>\r\n                    <a href=\"/\" target=\"_blank\" rel=\"noreferrer nooppener\">Made by Tony Moon</a>\r\n                </Col>\r\n            </Row>\r\n        </div>\r\n    )\r\n};\r\n\r\nAppLayout.propType = {\r\n    children: PropType.node.isRequired,\r\n};\r\n\r\nexport default AppLayout;"]},"metadata":{},"sourceType":"module"}