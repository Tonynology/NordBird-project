{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nexport var initialState = {\n  mainPosts: [{\n    id: 1,\n    User: {\n      id: 1,\n      nickname: 'tonymoon'\n    },\n    content: 'first post #express',\n    Images: [{\n      src: 'https://bookthumb-phinf.pstatic.net/cover/137/995/13799585.jpg?update=2018726'\n    }, {\n      src: 'https://bookthumb-phinf.pstatic.net/cover/137/995/13799585.jpg?update=2018726'\n    }, {\n      src: 'https://bookthumb-phinf.pstatic.net/cover/137/995/13799585.jpg?update=2018726'\n    }],\n    Comments: [{\n      User: {\n        nickname: 'nero'\n      },\n      content: 'congratulation!'\n    }, {\n      User: {\n        nickname: 'moon'\n      },\n      content: 'haha nice'\n    }]\n  }],\n  imagePaths: [],\n  postAdded: false\n};\nvar ADD_POST = 'ADD_POST'; //오타방지 차원에서 변수로 빼주는게 좋다. \n\nexport var addPost = {\n  type: ADD_POST\n};\nvar dummyPost = {\n  id: 2,\n  content: 'this is dummy',\n  User: {\n    id: 1,\n    nickname: 'Tony'\n  },\n  Images: [],\n  Comments: []\n};\nexport default (function () {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case ADD_POST:\n      {\n        return _objectSpread(_objectSpread({}, state), {}, {\n          mainPost: [dummyPost].concat(_toConsumableArray(state.mainPosts)),\n          postAdded: true\n        });\n      }\n\n    default:\n      {\n        return _objectSpread({}, state);\n      }\n  }\n});","map":{"version":3,"sources":["C:/Users/Tony/Documents/GitHub/nordbird/front/reducers/post.js"],"names":["initialState","mainPosts","id","User","nickname","content","Images","src","Comments","imagePaths","postAdded","ADD_POST","addPost","type","dummyPost","state","action","mainPost"],"mappings":";;;;;;;AAAA,OAAO,IAAMA,YAAY,GAAG;AACxBC,EAAAA,SAAS,EAAE,CAAC;AACRC,IAAAA,EAAE,EAAE,CADI;AAERC,IAAAA,IAAI,EAAE;AACFD,MAAAA,EAAE,EAAE,CADF;AAEFE,MAAAA,QAAQ,EAAE;AAFR,KAFE;AAMRC,IAAAA,OAAO,EAAE,qBAND;AAORC,IAAAA,MAAM,EAAE,CAAC;AACLC,MAAAA,GAAG,EAAE;AADA,KAAD,EAEL;AACCA,MAAAA,GAAG,EAAE;AADN,KAFK,EAIL;AACCA,MAAAA,GAAG,EAAE;AADN,KAJK,CAPA;AAcRC,IAAAA,QAAQ,EAAE,CAAC;AACPL,MAAAA,IAAI,EAAE;AACFC,QAAAA,QAAQ,EAAE;AADR,OADC;AAIPC,MAAAA,OAAO,EAAE;AAJF,KAAD,EAKP;AACCF,MAAAA,IAAI,EAAE;AACFC,QAAAA,QAAQ,EAAE;AADR,OADP;AAICC,MAAAA,OAAO,EAAE;AAJV,KALO;AAdF,GAAD,CADa;AA2BxBI,EAAAA,UAAU,EAAE,EA3BY;AA4BxBC,EAAAA,SAAS,EAAE;AA5Ba,CAArB;AA+BP,IAAMC,QAAQ,GAAG,UAAjB,C,CAAgC;;AAEhC,OAAO,IAAMC,OAAO,GAAG;AACnBC,EAAAA,IAAI,EAAEF;AADa,CAAhB;AAIP,IAAMG,SAAS,GAAG;AACdZ,EAAAA,EAAE,EAAE,CADU;AAEdG,EAAAA,OAAO,EAAE,eAFK;AAGdF,EAAAA,IAAI,EAAE;AACFD,IAAAA,EAAE,EAAE,CADF;AAEFE,IAAAA,QAAQ,EAAE;AAFR,GAHQ;AAOdE,EAAAA,MAAM,EAAE,EAPM;AAQdE,EAAAA,QAAQ,EAAE;AARI,CAAlB;AAWA,gBAAe,YAAkC;AAAA,MAAjCO,KAAiC,uEAAzBf,YAAyB;AAAA,MAAXgB,MAAW;;AAC7C,UAAQA,MAAM,CAACH,IAAf;AACI,SAAKF,QAAL;AAAe;AACX,+CACOI,KADP;AAEIE,UAAAA,QAAQ,GAAGH,SAAH,4BAAiBC,KAAK,CAACd,SAAvB,EAFZ;AAGIS,UAAAA,SAAS,EAAE;AAHf;AAKH;;AAED;AAAS;AACL,iCACOK,KADP;AAGH;AAbL;AAeH,CAhBD","sourcesContent":["export const initialState = {\r\n    mainPosts: [{\r\n        id: 1,\r\n        User: {\r\n            id: 1,\r\n            nickname: 'tonymoon',\r\n        },\r\n        content: 'first post #express',\r\n        Images: [{\r\n            src: 'https://bookthumb-phinf.pstatic.net/cover/137/995/13799585.jpg?update=2018726'\r\n        }, {\r\n            src: 'https://bookthumb-phinf.pstatic.net/cover/137/995/13799585.jpg?update=2018726'\r\n        }, {\r\n            src: 'https://bookthumb-phinf.pstatic.net/cover/137/995/13799585.jpg?update=2018726'\r\n        }],\r\n        Comments: [{\r\n            User: {\r\n                nickname: 'nero',\r\n            },\r\n            content: 'congratulation!',        \r\n        }, {\r\n            User: {\r\n                nickname: 'moon',\r\n            },\r\n            content: 'haha nice',\r\n        }]\r\n    }],\r\n    imagePaths: [],\r\n    postAdded: false,\r\n}\r\n\r\nconst ADD_POST = 'ADD_POST';    //오타방지 차원에서 변수로 빼주는게 좋다. \r\n\r\nexport const addPost = {\r\n    type: ADD_POST,\r\n};\r\n\r\nconst dummyPost = {\r\n    id: 2,\r\n    content: 'this is dummy',\r\n    User: {\r\n        id: 1,\r\n        nickname: 'Tony',\r\n    },\r\n    Images: [],\r\n    Comments: [],\r\n};\r\n\r\nexport default (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case ADD_POST: {\r\n            return {\r\n                ...state,\r\n                mainPost: [dummyPost, ...state.mainPosts],\r\n                postAdded: true,\r\n            };\r\n        }\r\n            \r\n        default: {\r\n            return {\r\n                ...state,               \r\n            };\r\n        }\r\n    }\r\n};\r\n"]},"metadata":{},"sourceType":"module"}