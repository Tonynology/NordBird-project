{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Tony\\\\Documents\\\\GitHub\\\\nordbird\\\\front\\\\components\\\\LoginForm.js\";\nvar __jsx = React.createElement;\nimport React, { useState, useCallback, useMemo } from 'react';\nimport { Form, Input, Button } from 'antd';\nimport Link from 'next/link';\nimport styled from 'styled-components'; // import PropTypes from 'prop-types';\n\nimport useInput from '../hooks/useInput';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { loginAction } from '../reducers/user'; //Styled-component 방식. 이것 대신 useMemo 를 써도 됨. useMemo는 값을 저장하는 기능.\n\nconst ButtonWrapper = styled.div`       \n    margin-top: 10px;\n`;\nconst FormWrapper = styled(Form)`\n    padding: 10px;\n`; // const LoginForm = ({ setIsLoggedIn }) => \n\nconst LoginForm = () => {\n  const dispatch = useDispatch();\n  const {\n    isLoggingIn\n  } = useSelector(state => state.user);\n  const [id, onChangeId] = useInput('');\n  const [password, onChangePassword] = useInput(''); // const [id, setId] = useState('');\n  // const [password, setPassword] = useState('');\n  // const onChangeId = useCallback((e) => {//이런것들 처럼 component에 props를 넘기는 함수는 useCallback을 써야 최적화가 된다.\n  //     setId(e.target.value);\n  // }, []);\n  // const onChangePassword = useCallback((e) => {\n  //     setPassword(e.target.value);\n  // }, []);\n  // const style = useMemo(() => ({ marginTop: 10}), []);\n\n  const onSubmitForm = useCallback(() => {\n    // setIsLoggedIn(true);\n    dispatch(loginRequestAction({\n      id,\n      password\n    }));\n  }, [id, password]);\n  return __jsx(FormWrapper, {\n    onFinish: onSubmitForm,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }\n  }, __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }\n  }, __jsx(\"label\", {\n    htmlFor: \"user-id\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 17\n    }\n  }, \"ID\"), __jsx(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 17\n    }\n  }), __jsx(Input, {\n    name: \"user-id\",\n    value: id,\n    onChange: onChangeId,\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 17\n    }\n  })), __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }\n  }, __jsx(\"label\", {\n    htmlFor: \"user-password\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 17\n    }\n  }, \"password\"), __jsx(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 17\n    }\n  }), __jsx(Input, {\n    name: \"user-password\",\n    type: \"password\",\n    value: password,\n    onChange: onChangePassword,\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 17\n    }\n  })), __jsx(ButtonWrapper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }\n  }, __jsx(Button, {\n    type: \"primary\",\n    htmlType: \"submit\",\n    loading: isLoggingIn,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 17\n    }\n  }, \"Login\"), __jsx(Link, {\n    href: \"/signup\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 17\n    }\n  }, __jsx(\"a\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 38\n    }\n  }, __jsx(Button, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 41\n    }\n  }, \"Signup\")))));\n}; // LoginForm.propTypes = {\n//     setIsLoggedIn: PropTypes.func.isRequired,\n// };\n\n\nexport default LoginForm;","map":{"version":3,"sources":["C:/Users/Tony/Documents/GitHub/nordbird/front/components/LoginForm.js"],"names":["React","useState","useCallback","useMemo","Form","Input","Button","Link","styled","useInput","useDispatch","useSelector","loginAction","ButtonWrapper","div","FormWrapper","LoginForm","dispatch","isLoggingIn","state","user","id","onChangeId","password","onChangePassword","onSubmitForm","loginRequestAction"],"mappings":"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","sourcesContent":["import React, { useState, useCallback, useMemo } from 'react';\r\nimport { Form, Input, Button } from 'antd';\r\nimport Link from 'next/link';\r\nimport styled from 'styled-components';\r\n// import PropTypes from 'prop-types';\r\n\r\nimport useInput from '../hooks/useInput';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { loginAction } from '../reducers/user';\r\n\r\n//Styled-component 방식. 이것 대신 useMemo 를 써도 됨. useMemo는 값을 저장하는 기능.\r\nconst ButtonWrapper = styled.div`       \r\n    margin-top: 10px;\r\n`;\r\n\r\nconst FormWrapper = styled(Form)`\r\n    padding: 10px;\r\n`;\r\n// const LoginForm = ({ setIsLoggedIn }) => \r\nconst LoginForm = () => {\r\n    const dispatch = useDispatch();\r\n    const { isLoggingIn } = useSelector((state) => state.user);\r\n    const [id, onChangeId] = useInput('');\r\n    const [password, onChangePassword] = useInput('');\r\n\r\n    // const [id, setId] = useState('');\r\n    // const [password, setPassword] = useState('');\r\n\r\n    // const onChangeId = useCallback((e) => {//이런것들 처럼 component에 props를 넘기는 함수는 useCallback을 써야 최적화가 된다.\r\n    //     setId(e.target.value);\r\n    // }, []);\r\n\r\n    // const onChangePassword = useCallback((e) => {\r\n    //     setPassword(e.target.value);\r\n    // }, []);\r\n\r\n    // const style = useMemo(() => ({ marginTop: 10}), []);\r\n\r\n    const onSubmitForm = useCallback(() => {\r\n        // setIsLoggedIn(true);\r\n        dispatch(loginRequestAction({ id, password }));\r\n    }, [id, password]);\r\n\r\n    return (\r\n        <FormWrapper onFinish={onSubmitForm}>\r\n            <div>\r\n                <label htmlFor=\"user-id\">ID</label>\r\n                <br/>\r\n                <Input name=\"user-id\" value={id} onChange={onChangeId} required />\r\n            </div>\r\n            <div>\r\n                <label htmlFor=\"user-password\">password</label>\r\n                <br/>\r\n                <Input \r\n                    name=\"user-password\" \r\n                    type=\"password\" \r\n                    value={password} \r\n                    onChange={onChangePassword} \r\n                    required \r\n                />\r\n            </div>\r\n            <ButtonWrapper>\r\n                <Button type=\"primary\" htmlType=\"submit\" loading={isLoggingIn}>Login</Button>\r\n                <Link href=\"/signup\"><a><Button>Signup</Button></a></Link>\r\n            </ButtonWrapper>\r\n        </FormWrapper>\r\n    );\r\n}\r\n\r\n// LoginForm.propTypes = {\r\n//     setIsLoggedIn: PropTypes.func.isRequired,\r\n// };\r\n\r\nexport default LoginForm;"]},"metadata":{},"sourceType":"module"}