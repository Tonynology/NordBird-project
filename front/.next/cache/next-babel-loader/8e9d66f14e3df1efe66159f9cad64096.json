{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Tony\\\\Documents\\\\GitHub\\\\nordbird\\\\front\\\\components\\\\PostCard.js\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { Card, ButtonGroup, Button, Popover } from 'antd';\nimport { RetweetOutlined, HeartOutlined, MessageOutlined, EllipsisOutlined } from '@ant-design/icons';\nimport { useSelector } from 'react-redux';\nimport Avatar from 'antd/lib/avatar/avatar';\nimport PostImages from './PostImages';\n\nconst PostCard = ({\n  post\n}) => {\n  const {\n    me\n  } = useSelector(state => state.user);\n  const id = me === null || me === void 0 ? void 0 : me.id; // const id = me && me.id;\n\n  return __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 9\n    }\n  }, __jsx(Card, {\n    cover: postMessage.Image[0] && __jsx(PostImages, {\n      images: post.Images,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 48\n      }\n    }),\n    actions: [//배열 안에 jsx를 넣을 땐 key값을 함께 넣어줘야함.\n    __jsx(RetweetOutlined, {\n      key: \"retweet\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 21\n      }\n    }), __jsx(HeartOutlined, {\n      key: \"heart\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 21\n      }\n    }), __jsx(MessageOutlined, {\n      key: \"comment\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 21\n      }\n    }), __jsx(Popover, {\n      key: \"more\",\n      content: __jsx(ButtonGroup, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 25\n        }\n      }, id && post.User.id == id ? __jsx(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 33\n        }\n      }, __jsx(Button, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 37\n        }\n      }, \"Edit\"), __jsx(Button, {\n        type: \"danger\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 37\n        }\n      }, \"Delete\")) : __jsx(Button, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 31\n        }\n      }, \"Report\")),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 21\n      }\n    }, __jsx(EllipsisOutlined, {\n      key: \"retweet\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 25\n      }\n    }))],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 13\n    }\n  }, __jsx(Card.Meta, {\n    avatar: __jsx(Avatar, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 29\n      }\n    }, post.User.nickname[0]),\n    title: post.User.nickname,\n    description: post.content,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 17\n    }\n  })));\n};\n\nPostCard.prpTypes = {\n  //.object 대신 .shape은 object 안에 있는 모든걸 다 표기해줄려고 할때 사용.\n  post: PropTypes.shape({\n    id: PropTypes.number,\n    User: PropTypes.object,\n    content: PropTypes.string,\n    createdAt: PropTypes.object,\n    Comments: PropTypes.arrayOf(PropTypes.object),\n    Images: PropTypes.arrayOf(PropTypes.object)\n  }).isRequired\n};\nexport default PostCard;","map":{"version":3,"sources":["C:/Users/Tony/Documents/GitHub/nordbird/front/components/PostCard.js"],"names":["React","PropTypes","Card","ButtonGroup","Button","Popover","RetweetOutlined","HeartOutlined","MessageOutlined","EllipsisOutlined","useSelector","Avatar","PostImages","PostCard","post","me","state","user","id","postMessage","Image","Images","User","nickname","content","prpTypes","shape","number","object","string","createdAt","Comments","arrayOf","isRequired"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Card, ButtonGroup, Button, Popover } from 'antd';\r\nimport { RetweetOutlined, HeartOutlined, MessageOutlined,  EllipsisOutlined } from '@ant-design/icons';\r\nimport { useSelector } from 'react-redux';\r\nimport Avatar from 'antd/lib/avatar/avatar';\r\n\r\nimport PostImages from './PostImages';\r\n\r\nconst PostCard = ({ post }) => {\r\n    const { me } = useSelector((state) => state.user);\r\n    const id = me?.id;\r\n    // const id = me && me.id;\r\n    return (\r\n        <div>\r\n            <Card\r\n                cover={postMessage.Image[0] && <PostImages images={post.Images} />}\r\n                actions={[      //배열 안에 jsx를 넣을 땐 key값을 함께 넣어줘야함.\r\n                    <RetweetOutlined key=\"retweet\"/>,\r\n                    <HeartOutlined key=\"heart\"/>,\r\n                    <MessageOutlined key=\"comment\"/>,\r\n                    <Popover key=\"more\" content={(\r\n                        <ButtonGroup>\r\n                            {id && post.User.id == id \r\n                            ? (\r\n                                <div>\r\n                                    <Button>Edit</Button>\r\n                                    <Button type=\"danger\">Delete</Button>\r\n                                </div>\r\n                            ) \r\n                            : <Button>Report</Button>}\r\n                            \r\n                        </ButtonGroup>\r\n                    )}>\r\n                        <EllipsisOutlined key=\"retweet\"/>\r\n                    </Popover>\r\n                ]}\r\n            >\r\n                <Card.Meta\r\n                    avatar={<Avatar>{post.User.nickname[0]}</Avatar>}\r\n                    title={post.User.nickname}\r\n                    description={post.content}\r\n                />\r\n            </Card>\r\n            {/* <CommentForm />\r\n            <Comments /> */}\r\n        </div>\r\n    );\r\n};\r\n\r\nPostCard.prpTypes = {   //.object 대신 .shape은 object 안에 있는 모든걸 다 표기해줄려고 할때 사용.\r\n    post: PropTypes.shape({\r\n        id: PropTypes.number,\r\n        User: PropTypes.object,\r\n        content: PropTypes.string,\r\n        createdAt: PropTypes.object,\r\n        Comments: PropTypes.arrayOf(PropTypes.object),\r\n        Images: PropTypes.arrayOf(PropTypes.object),\r\n    }).isRequired,   \r\n};\r\n\r\nexport default PostCard;"]},"metadata":{},"sourceType":"module"}