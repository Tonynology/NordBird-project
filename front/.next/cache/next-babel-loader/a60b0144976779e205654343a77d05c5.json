{"ast":null,"code":"import { all, fork, put, delay, takeLatest } from \"@redux-saga/core/effects\";\nimport axios from 'axios';\nimport { FOLLOW_FAILURE, FOLLOW_REQUEST, FOLLOW_SUCCESS, UNFOLLOW_FAILURE, UNFOLLOW_REQUEST, UNFOLLOW_SUCCESS, LOG_IN_FAILURE, LOG_IN_REQUEST, LOG_IN_SUCCESS, LOG_OUT_FAILURE, LOG_OUT_REQUEST, LOG_OUT_SUCCESS, SIGN_UP_FAILURE, SIGN_UP_REQUEST, SIGN_UP_SUCCESS } from '../reducers/user';\n\nfunction followAPI(data) {\n  return axios.post('/api/login', data);\n}\n\nfunction* follow(action) {\n  try {\n    yield delay(1000); // const result = yield call(loginAPI, action.data);    //call을 쓰면 동기, fork를 쓰면 비동기. result값을 받고 진행해야 하므로 call을 사용.\n\n    yield put({\n      type: FOLLOW_SUCCESS,\n      data: action.data\n    });\n  } catch (err) {\n    yield put({\n      type: FOLLOW_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction unfollowAPI(data) {\n  return axios.post('/api/login', data);\n}\n\nfunction* unfollow(action) {\n  try {\n    yield delay(1000);\n    yield put({\n      type: UNFOLLOW_SUCCESS,\n      data: action.data\n    });\n  } catch (err) {\n    yield put({\n      type: UNFOLLOW_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction loginAPI(data) {\n  return axios.post('/user/login', data);\n}\n\nfunction* logIn(action) {\n  try {\n    const result = yield call(loginAPI, action.data); //call을 쓰면 동기, fork를 쓰면 비동기. result값을 받고 진행해야 하므로 call을 사용.\n\n    yield put({\n      type: LOG_IN_SUCCESS,\n      data: result.data\n    });\n  } catch (err) {\n    yield put({\n      type: LOG_IN_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction logoutAPI() {\n  return axios.post('/logout');\n}\n\nfunction* logOut() {\n  try {\n    yield delay(1000); // const result = yield call(logoutAPI);    //call을 쓰면 동기, fork를 쓰면 비동기. result값을 받고 진행해야 하므로 call을 사용.\n\n    yield put({\n      type: LOG_OUT_SUCCESS\n    });\n  } catch (err) {\n    yield put({\n      type: LOG_OUT_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction signUpAPI(data) {\n  return axios.post('/user', data);\n}\n\nfunction* signUp(action) {\n  try {\n    const result = yield call(signUpAPI, action.data);\n    yield put({\n      type: SIGN_UP_SUCCESS\n    });\n  } catch (err) {\n    yield put({\n      type: SIGN_UP_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction* watchFollow() {\n  yield takeLatest(FOLLOW_REQUEST, follow);\n}\n\nfunction* watchUnfollow() {\n  yield takeLatest(UNFOLLOW_REQUEST, unfollow);\n}\n\nfunction* watchLogin() {\n  yield takeLatest(LOG_IN_REQUEST, logIn);\n}\n\nfunction* watchLogOut() {\n  yield takeLatest(LOG_OUT_REQUEST, logOut);\n}\n\nfunction* watchSignUp() {\n  yield takeLatest(SIGN_UP_REQUEST, signUp);\n}\n\nexport default function* userSaga() {\n  yield all([fork(watchFollow), fork(watchUnfollow), fork(watchLogin), fork(watchLogOut), fork(watchSignUp)]);\n}","map":{"version":3,"sources":["C:/Users/Tony/Documents/GitHub/nordbird/front/sagas/user.js"],"names":["all","fork","put","delay","takeLatest","axios","FOLLOW_FAILURE","FOLLOW_REQUEST","FOLLOW_SUCCESS","UNFOLLOW_FAILURE","UNFOLLOW_REQUEST","UNFOLLOW_SUCCESS","LOG_IN_FAILURE","LOG_IN_REQUEST","LOG_IN_SUCCESS","LOG_OUT_FAILURE","LOG_OUT_REQUEST","LOG_OUT_SUCCESS","SIGN_UP_FAILURE","SIGN_UP_REQUEST","SIGN_UP_SUCCESS","followAPI","data","post","follow","action","type","err","error","response","unfollowAPI","unfollow","loginAPI","logIn","result","call","logoutAPI","logOut","signUpAPI","signUp","watchFollow","watchUnfollow","watchLogin","watchLogOut","watchSignUp","userSaga"],"mappings":"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","sourcesContent":["import { all, fork, put, delay, takeLatest } from \"@redux-saga/core/effects\";\r\nimport axios from 'axios';\r\nimport {\r\n    FOLLOW_FAILURE,\r\n    FOLLOW_REQUEST,\r\n    FOLLOW_SUCCESS,\r\n    UNFOLLOW_FAILURE,\r\n    UNFOLLOW_REQUEST,\r\n    UNFOLLOW_SUCCESS,\r\n    LOG_IN_FAILURE,\r\n    LOG_IN_REQUEST,\r\n    LOG_IN_SUCCESS,\r\n    LOG_OUT_FAILURE,\r\n    LOG_OUT_REQUEST,\r\n    LOG_OUT_SUCCESS,\r\n    SIGN_UP_FAILURE,\r\n    SIGN_UP_REQUEST,\r\n    SIGN_UP_SUCCESS,  \r\n  } from '../reducers/user';\r\n\r\nfunction followAPI(data) {\r\n    return axios.post('/api/login', data)\r\n}\r\n\r\nfunction* follow(action) {\r\n    try {\r\n        yield delay(1000);\r\n        // const result = yield call(loginAPI, action.data);    //call을 쓰면 동기, fork를 쓰면 비동기. result값을 받고 진행해야 하므로 call을 사용.\r\n        yield put({\r\n            type: FOLLOW_SUCCESS,\r\n            data: action.data\r\n        });\r\n    } catch (err) {\r\n        yield put({\r\n            type: FOLLOW_FAILURE,\r\n            error: err.response.data\r\n        })\r\n    }    \r\n}\r\n\r\nfunction unfollowAPI(data) {\r\n    return axios.post('/api/login', data)\r\n}\r\n\r\nfunction* unfollow(action) {\r\n    try {\r\n        yield delay(1000);\r\n        yield put({\r\n            type: UNFOLLOW_SUCCESS,\r\n            data: action.data\r\n        });\r\n    } catch (err) {\r\n        yield put({\r\n            type: UNFOLLOW_FAILURE,\r\n            error: err.response.data\r\n        })\r\n    }    \r\n}\r\n\r\nfunction loginAPI(data) {\r\n    return axios.post('/user/login', data)\r\n}\r\n\r\nfunction* logIn(action) {\r\n    try {\r\n        \r\n        const result = yield call(loginAPI, action.data);    //call을 쓰면 동기, fork를 쓰면 비동기. result값을 받고 진행해야 하므로 call을 사용.\r\n        yield put({\r\n            type: LOG_IN_SUCCESS,\r\n            data: result.data,\r\n        });\r\n    } catch (err) {\r\n        yield put({\r\n            type: LOG_IN_FAILURE,\r\n            error: err.response.data\r\n        })\r\n    }    \r\n}\r\n\r\nfunction logoutAPI() {\r\n    return axios.post('/logout')\r\n}\r\n\r\nfunction* logOut() {\r\n    try {\r\n        yield delay(1000);\r\n        // const result = yield call(logoutAPI);    //call을 쓰면 동기, fork를 쓰면 비동기. result값을 받고 진행해야 하므로 call을 사용.\r\n        yield put({\r\n            type: LOG_OUT_SUCCESS,\r\n        });\r\n    } catch (err) {\r\n        yield put({\r\n            type: LOG_OUT_FAILURE,\r\n            error: err.response.data\r\n        })\r\n    }    \r\n}\r\n\r\nfunction signUpAPI(data) {\r\n    return axios.post('/user', data);\r\n}\r\n\r\nfunction* signUp(action) {\r\n    try {\r\n        const result = yield call(signUpAPI, action.data);\r\n        yield put({\r\n            type: SIGN_UP_SUCCESS,\r\n        });\r\n    } catch (err) {\r\n        yield put({\r\n            type: SIGN_UP_FAILURE,\r\n            error: err.response.data\r\n        })\r\n    }    \r\n}\r\n\r\nfunction* watchFollow() {\r\n    yield takeLatest(FOLLOW_REQUEST, follow);\r\n}\r\n\r\nfunction* watchUnfollow() {\r\n    yield takeLatest(UNFOLLOW_REQUEST, unfollow);\r\n}\r\n\r\nfunction* watchLogin() {\r\n    yield takeLatest(LOG_IN_REQUEST, logIn);\r\n}\r\n\r\nfunction* watchLogOut() {\r\n    yield takeLatest(LOG_OUT_REQUEST, logOut);\r\n}\r\n\r\nfunction* watchSignUp() {\r\n    yield takeLatest(SIGN_UP_REQUEST, signUp);\r\n}\r\n\r\nexport default function* userSaga() {\r\n    yield all([\r\n        fork(watchFollow),\r\n        fork(watchUnfollow),\r\n        fork(watchLogin),\r\n        fork(watchLogOut),\r\n        fork(watchSignUp)\r\n    ]);\r\n}"]},"metadata":{},"sourceType":"module"}